{
  "openapi": "3.0.1",
  "info": {
    "title": "Public API",
    "version": "public_v1"
  },
  "paths": {
    "/api/publicApi/get-unit-measures": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get unit of measures",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/publicApi/getAllCompanies": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get the list of all registered companies",
        "parameters": [
          {
            "name": "includeAllStatuses",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MiniCompanyDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MiniCompanyDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MiniCompanyDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MiniCompanyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/downloadAllCompanies": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get the list of all registered companies",
        "parameters": [
          {
            "name": "includeAllStatuses",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/publicApi/getEfakturaVersion": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get the version of eFaktura",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EfakturaVersionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EfakturaVersionDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EfakturaVersionDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EfakturaVersionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/sales-invoice/ubl/upload": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Import sales invoice by uploading Ubl file",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sendToCir",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SendToCir"
            }
          },
          {
            "name": "executeValidation",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ublFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "ublFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MiniInvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiniInvoiceDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MiniInvoiceDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MiniInvoiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/sales-invoice/ubl": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Import sales ubl",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sendToCir",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SendToCir"
            }
          },
          {
            "name": "executeValidation",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MiniInvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiniInvoiceDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MiniInvoiceDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MiniInvoiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/sales-invoice": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get sales invoice",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleSalesInvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleSalesInvoiceDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleSalesInvoiceDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleSalesInvoiceDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Delete only draft or new sales invoices, other invoices are ignored.",
        "description": "Sample Request: [ salesInvoiceId1, salesInvoiceId2, salesInvoiceId3 ]",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "text/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/*+xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/sales-invoice/signature": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get sales invoice signature",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/publicApi/sales-invoice/cancel": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Cancel invoice",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelInvoiceMessageDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CancelInvoiceMessageDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/CancelInvoiceMessageDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/CancelInvoiceMessageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/sales-invoice/storno": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Invoice Storno Cancellation",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StornoInvoiceMessageDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StornoInvoiceMessageDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StornoInvoiceMessageDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/StornoInvoiceMessageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/purchase-invoice": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get purchase invoice",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePurchaseInvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePurchaseInvoiceDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePurchaseInvoiceDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePurchaseInvoiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/sales-invoice/pdf": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Download sales invoice extended PDF as FileStream or generate new one if not exists",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/publicApi/sales-invoice/xml": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Download sales invoice ubl as FileStream",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/publicApi/sales-invoice/changes": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Search for all sales invoices which status changed on specific date",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesInvoiceStatusChangeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesInvoiceStatusChangeDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesInvoiceStatusChangeDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesInvoiceStatusChangeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/sales-invoice/getValueAddedTaxExemptionReasonList": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get list of all exemption reasons",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValueAddedTaxExemptionReasonDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValueAddedTaxExemptionReasonDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValueAddedTaxExemptionReasonDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValueAddedTaxExemptionReasonDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/sales-invoice/ids": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get sales invoice IDs",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoicesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoicesDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoicesDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoicesDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/sales-invoice/{invoiceId}": {
      "delete": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Delete only draft or new sales invoices, other invoices cannot be deleted",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/purchase-invoice/changes": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Search for all purchase invoices which status changed on specific date",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoiceStatusChangeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoiceStatusChangeDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoiceStatusChangeDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoiceStatusChangeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/purchase-invoice/pdf": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Download purchase invoice extended pdf as FileStream or generate new one if not exists",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/publicApi/purchase-invoice/xml": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Download purchase invoice ubl as FileStream",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/publicApi/purchase-invoice/acceptRejectPurchaseInvoice": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Accept or reject purchase invoice",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptRejectPurchaseInvoice"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AcceptRejectPurchaseInvoice"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AcceptRejectPurchaseInvoice"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/AcceptRejectPurchaseInvoice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptRejectResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptRejectResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptRejectResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptRejectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/purchase-invoice/signature": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get purchase invoice signature",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/publicApi/purchase-invoice/ids": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get purchase invoice IDs",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoicesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoicesDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoicesDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoicesDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/purchase-invoice/overview": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get purchase invoice overview",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoiceOverviewDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoiceOverviewDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoiceOverviewDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoiceOverviewDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/subscribe": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Subscribe for the next day to receive invoice status change notifications",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/purchase-invoice/vatReverseCharge": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Records VAT on specified invoice calculated by receiver, for invoice with VAT reverse charge",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatReverseChargeDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/VatReverseChargeDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/VatReverseChargeDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/VatReverseChargeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/publicApi/vat-recording/group": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Record group vat, do a correction for previous group vat record if exist",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupVatId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupVatAddDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GroupVatAddDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GroupVatAddDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/GroupVatAddDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GroupVatDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupVatDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GroupVatDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GroupVatDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get group vat recordings and filter old records by last modified date and new ones by status change date",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupVatListDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupVatListDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupVatListDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupVatListDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/vat-recording/group/cancel/{groupVatId}": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Cancel all versions of group vat recording",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupVatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/vat-recording/group/{groupVatId}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get group vat recording by id",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupVatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GroupVatDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupVatDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GroupVatDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GroupVatDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/vat-recording/individual": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Record individual vat, do a correction for previous individual vat record if exist",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "individualVatId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndividualVatAddDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IndividualVatAddDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IndividualVatAddDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/IndividualVatAddDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualVatDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualVatDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualVatDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualVatDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get individual vat recordings and filter old records by last modified date and new ones by status change date",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndividualVatListDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndividualVatListDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndividualVatListDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndividualVatListDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/vat-recording/individual/cancel/{individualVatId}": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Cancel all versions of individual vat recording",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "individualVatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/vat-recording/individual/{individualVatId}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get individual vat recording by id",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "individualVatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualVatDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualVatDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualVatDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualVatDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/efiscalization/sales/fiscal-bill/{fiscalBillNumber}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get sales fiscal bill by number",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fiscalBillNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillOutputApiDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillOutputApiDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillOutputApiDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillOutputApiDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/efiscalization/purchase/fiscal-bill/{fiscalBillNumber}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get purchase fiscal bill by fiscal bill number",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fiscalBillNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillOutputApiDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillOutputApiDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillOutputApiDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillOutputApiDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/efiscalization/sales/fiscal-bill/{dateToGet}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get sales fiscal bills for a specific date",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateToGet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillViewDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillViewDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/efiscalization/purchase/fiscal-bill/{dateToGet}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get purchase fiscal bills for a specific date",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateToGet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillViewDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillViewDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalBillViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/recipients-notice-on-input-vat/sender/send": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Send recipient notice",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SenderRecipientsNoticeRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SenderRecipientsNoticeRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SenderRecipientsNoticeRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/SenderRecipientsNoticeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/recipients-notice-on-input-vat/sender/{noticeId}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get sent full notification data by notice Id",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/recipients-notice-on-input-vat/sender/date-range": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get all recipient notices in selected date range",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/recipients-notice-on-input-vat/sender/mistake-status": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get all recipient notices in mistake status",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FullSenderRecipientsNoticeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/recipients-notice-on-input-vat/recipient/{noticeId}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get received full notification data by notice Id",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FullReceiverRecipientsNoticeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullReceiverRecipientsNoticeDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FullReceiverRecipientsNoticeDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FullReceiverRecipientsNoticeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/recipients-notice-on-input-vat/recipient/date-range": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get all recipient notices in selected date range",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiverRecipientsNoticeResponseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiverRecipientsNoticeResponseDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiverRecipientsNoticeResponseDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceiverRecipientsNoticeResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/public-purchase-contractor-invoice/changes": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Search for all invoices which status changed on specific date and company is public purchase contract signer",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoiceStatusChangeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoiceStatusChangeDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoiceStatusChangeDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoiceStatusChangeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/public-purchase-contractor-invoice/xml": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Download purchase invoice ubl as FileStream where company is public purchase contract signer",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/publicApi/public-purchase-contractor-invoice": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get purchase invoice for public purchase contract signer",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePurchaseInvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePurchaseInvoiceDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePurchaseInvoiceDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePurchaseInvoiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/public-purchase-contractor-invoice/signature": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get public purchase invoice signature for public purchase contract signer",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/publicApi/public-purchase-contractor-invoice/ids": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get purchase invoice IDs for public purchase contract signer",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PurchaseInvoiceStatusFilter"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoicesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoicesDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoicesDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoicesDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/cir-tickets/{cirInvoiceId}/{onlyActiveTickets}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Gets all tickets by CIR invoice Id on from CIR",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cirInvoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onlyActiveTickets",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CirTicketListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CirTicketListResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CirTicketListResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CirTicketListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/cir-tickets/find": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Gets all tickets from CIR",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CirTicketSearchParameter"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CirTicketSearchParameter"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/CirTicketSearchParameter"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/CirTicketSearchParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CirTicketListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CirTicketListResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CirTicketListResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CirTicketListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/cir-tickets/addCirTicket": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Creates new ticket on CIR",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCirTicketRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddCirTicketRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddCirTicketRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/AddCirTicketRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/cir-tickets/getCirTicketHistory/{cirTicketId}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get cir ticket history by CIR ticket Id",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cirTicketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CirTicketHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CirTicketHistoryDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CirTicketHistoryDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CirTicketHistoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/sales-cir-invoice/getSalesInvoiceAssignationHistory/{cirInvoiceId}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get sales invoice assignation history by CIR invoice Id",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cirInvoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceHistoryDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceHistoryDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceHistoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/sales-cir-invoice/getInvoicePaymentsAndHistory/{cirInvoiceId}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get invoice payments and history from sales side by CIR invoice Id",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cirInvoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CirHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CirHistoryDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CirHistoryDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CirHistoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/purchase-invoice/ubl/{cirInvoiceId}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Download purchase invoice ubl as FileStream by CIR invoice id",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cirInvoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/publicApi/purchase-invoice/{cirInvoiceId}/assign": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Assign Cir invoice",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cirInvoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignerPartyJBKJS",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignationContractNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoiceDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoiceDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/purchase-invoice/{cirInvoiceId}/cancelassign": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Cancel Cir invoice assignment",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cirInvoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoiceDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoiceDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/purchase-invoice/acceptRejectPurchaseInvoiceByCirInvoiceId": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Accept or reject purchase invoice by CIR invoice id",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptRejectPurchaseInvoiceByCirInvoiceId"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AcceptRejectPurchaseInvoiceByCirInvoiceId"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AcceptRejectPurchaseInvoiceByCirInvoiceId"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/AcceptRejectPurchaseInvoiceByCirInvoiceId"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptRejectPurchaseInvoiceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptRejectPurchaseInvoiceResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptRejectPurchaseInvoiceResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptRejectPurchaseInvoiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/purchase-cir-invoice/getPurchaseInvoiceAssignationHistory/{cirInvoiceId}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get purchase invoice assignation history by CIR invoice Id",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cirInvoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceHistoryDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceHistoryDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceHistoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/purchase-cir-invoice/getInvoicePaymentsAndHistory/{cirInvoiceId}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get invoice payments and history from purchase side by CIR invoice Id",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cirInvoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CirHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CirHistoryDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CirHistoryDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CirHistoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/company/update-company": {
      "put": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Update Company information",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/publicApi/Company/CheckIfCompanyRegisteredOnEfaktura": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Check if company has active eFaktura account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyAccountIdentificationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CompanyAccountIdentificationDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/CompanyAccountIdentificationDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/CompanyAccountIdentificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAccountOnEfAkturaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAccountOnEfAkturaDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAccountOnEfAkturaDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAccountOnEfAkturaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/customs-administration/import-declarations/ids": {
      "post": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get customs declaration IDs",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "duties",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CustomsDeclarationPaymentStatus"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomsDeclarationIdsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomsDeclarationIdsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/customs-administration/import-declarations/changes": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get customs declaration status changes",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomsDeclarationStatusChangeResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomsDeclarationStatusChangeResponse"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomsDeclarationStatusChangeResponse"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomsDeclarationStatusChangeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/customs-administration/import-declarations/{customsDeclarationId}/version/{version}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get company's customs declaration by specifying the version",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customsDeclarationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomsDeclarationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomsDeclarationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/customs-administration/import-declarations/{customsDeclarationId}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get company's customs declaration active version by specifying the id.",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customsDeclarationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomsDeclarationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomsDeclarationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/publicApi/customs-administration/import-declarations/{customsDeclarationId}/version/{version}/items/{itemOrdinalNumber}": {
      "get": {
        "tags": [
          "PublicApi"
        ],
        "summary": "Get company's customs declaration item.",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customsDeclarationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemOrdinalNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomsDeclarationItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomsDeclarationItemDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AcceptRejectPurchaseInvoice": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "accepted": {
            "type": "boolean"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AcceptRejectPurchaseInvoiceByCirInvoiceId": {
        "type": "object",
        "properties": {
          "cirInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "accepted": {
            "type": "boolean"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AcceptRejectPurchaseInvoiceResponse": {
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/ChangeStatusInvoiceResponse"
          },
          "success": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AcceptRejectResponse": {
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/ChangeStatusInvoiceResponse"
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "httpStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddCirTicketRequest": {
        "type": "object",
        "properties": {
          "cirInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "userComment": {
            "type": "string",
            "nullable": true
          },
          "resourceType": {
            "$ref": "#/components/schemas/CirResourceType"
          },
          "cirTicketCategory": {
            "$ref": "#/components/schemas/CirTicketCategory"
          }
        },
        "additionalProperties": false
      },
      "AmountChangeDto": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "cancelDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelComments": {
            "type": "string",
            "nullable": true
          },
          "changedId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AssignmentDto": {
        "type": "object",
        "properties": {
          "assignmentContractNr": {
            "type": "string",
            "nullable": true
          },
          "assignmentDebtorName": {
            "type": "string",
            "nullable": true
          },
          "assignmentDebtorCompanyNr": {
            "type": "string",
            "nullable": true
          },
          "assignmentIdfNr": {
            "type": "string",
            "nullable": true
          },
          "originalIdfNr": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BasisOfNotice": {
        "enum": [
          "CreditNoteIssued",
          "Storno"
        ],
        "type": "string"
      },
      "CancelInvoiceMessageDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "cancelComments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancellationDto": {
        "type": "object",
        "properties": {
          "cancelDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelledBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeStatusInvoiceResponse": {
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PurchaseInvoiceStatus"
          }
        },
        "additionalProperties": false
      },
      "ChangeUser": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CirAssignmentChange": {
        "enum": [
          "Assignment",
          "CancelAssignment"
        ],
        "type": "string"
      },
      "CirHistoryDto": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "assignment": {
            "$ref": "#/components/schemas/AssignmentDto"
          },
          "amountChanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmountChangeDto"
            },
            "nullable": true
          },
          "cancellation": {
            "$ref": "#/components/schemas/CancellationDto"
          },
          "settlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettlementDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CirInvoiceStatus": {
        "enum": [
          "None",
          "ActiveCir",
          "InvalidCir",
          "CancelledCir",
          "PartiallySettled",
          "Settled",
          "Assigned",
          "Proinvoice",
          "CIRStatusSyncError"
        ],
        "type": "string"
      },
      "CirResourceType": {
        "enum": [
          "Invoice",
          "Settlement"
        ],
        "type": "string"
      },
      "CirTicketCategory": {
        "enum": [
          "Information",
          "Validity",
          "Settlement",
          "Cancellation"
        ],
        "type": "string"
      },
      "CirTicketChangeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "oldValue": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/ChangeUser"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "serviceDesk": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CirTicketDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "cirId": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "userComment": {
            "type": "string",
            "nullable": true
          },
          "operatorComment": {
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/CirTicketStatus"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "closingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "categoryCyr": {
            "type": "string",
            "nullable": true
          },
          "companyNumber": {
            "type": "string",
            "nullable": true
          },
          "organizationName": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "$ref": "#/components/schemas/CirResourceType"
          },
          "cirTicketHistory": {
            "$ref": "#/components/schemas/CirTicketHistoryDto"
          }
        },
        "additionalProperties": false
      },
      "CirTicketHistoryDto": {
        "type": "object",
        "properties": {
          "cirTicketId": {
            "type": "integer",
            "format": "int64"
          },
          "cirTicketChanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CirTicketChangeDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CirTicketListResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CirTicketDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CirTicketSearchEnum": {
        "enum": [
          "CirId",
          "CompanyNumber",
          "CompanyName",
          "Data",
          "CreatinDateFrom",
          "CreatinDateTo",
          "ClosingDateFrom",
          "ClosingDateTo",
          "Status",
          "IssueType"
        ],
        "type": "string"
      },
      "CirTicketSearchEnumRestrictionItem": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/CirTicketSearchEnum"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CirTicketSearchParameter": {
        "type": "object",
        "properties": {
          "sortItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CirTicketSortEnumSortItem"
            },
            "nullable": true
          },
          "pagingOptions": {
            "$ref": "#/components/schemas/PagingOptions"
          },
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CirTicketSearchEnumRestrictionItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CirTicketSortEnum": {
        "enum": [
          "CirId",
          "CompanyNumber",
          "OrganizationName",
          "Data",
          "CreationDate",
          "ClosingDate"
        ],
        "type": "string"
      },
      "CirTicketSortEnumSortItem": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "$ref": "#/components/schemas/CirTicketSortEnum"
          },
          "sortDirection": {
            "$ref": "#/components/schemas/SortDirection"
          }
        },
        "additionalProperties": false
      },
      "CirTicketStatus": {
        "enum": [
          "Active",
          "Canceled",
          "Solved",
          "Unsolved"
        ],
        "type": "string"
      },
      "CompanyAccountIdentificationDto": {
        "type": "object",
        "properties": {
          "registrationNumber": {
            "type": "string",
            "nullable": true
          },
          "jbkjs": {
            "type": "string",
            "nullable": true
          },
          "vatNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyAccountOnEfAkturaDto": {
        "type": "object",
        "properties": {
          "eFakturaRegisteredCompany": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanyDetailsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "vatRegistrationCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyDetailsRequest": {
        "type": "object",
        "properties": {
          "vatRegistrationCode": {
            "type": "string",
            "nullable": true
          },
          "registrationCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyDto": {
        "required": [
          "countryId",
          "name",
          "registrationCode"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "webAddress": {
            "type": "string",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SspAddressDto"
            },
            "nullable": true
          },
          "bankAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SspBankAccountDto"
            },
            "nullable": true
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SspEmailDto"
            },
            "nullable": true
          },
          "registrationCode": {
            "minLength": 1,
            "type": "string"
          },
          "vatRegistrationCode": {
            "maxLength": 15,
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "contactPerson": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/CompanySettingsDto"
          },
          "isMainCompany": {
            "type": "boolean"
          },
          "groupId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "isPrivateCompany": {
            "type": "boolean"
          },
          "packageId": {
            "type": "integer",
            "format": "int32"
          },
          "additionalCode": {
            "type": "string",
            "nullable": true
          },
          "plusChannelsActive": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/CompanyStatus"
          },
          "companyWillBeDeletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "serbiaCompanyType": {
            "$ref": "#/components/schemas/SerbiaCompanyType"
          },
          "nonSebIbanWarning": {
            "type": "boolean"
          },
          "storeInvoiceDetails": {
            "type": "boolean",
            "nullable": true
          },
          "hasISP": {
            "type": "boolean",
            "nullable": true
          },
          "informationServiceProviderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "informationServiceProviderName": {
            "type": "string",
            "nullable": true
          },
          "ispAcceptedToRepresentCompany": {
            "type": "boolean",
            "nullable": true
          },
          "specialTreatment": {
            "type": "boolean"
          },
          "budgetCompanyType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyFullDetailsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "vatRegistrationCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "registrationCode": {
            "type": "string",
            "nullable": true
          },
          "isBudget": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanySettingsDto": {
        "type": "object",
        "properties": {
          "homeRoute": {
            "type": "string",
            "nullable": true
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SspModules"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyStatus": {
        "enum": [
          "Active",
          "Passive",
          "Deleted",
          "Migrated"
        ],
        "type": "string"
      },
      "CompanyUpdateNotificationEndpointDto": {
        "type": "object",
        "properties": {
          "outgoingInvoicesEndpoint": {
            "type": "string",
            "nullable": true
          },
          "incomingInvoicesEndpoint": {
            "type": "string",
            "nullable": true
          },
          "incomingInvoicesPPCEndpoint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractApplicationDto": {
        "type": "object",
        "properties": {
          "contractApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "registrationCode": {
            "type": "string",
            "nullable": true
          },
          "vatRegistrationCode": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SspAddressDto"
            },
            "nullable": true
          },
          "channel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "channelAddress": {
            "type": "string",
            "nullable": true
          },
          "invoiceNotificationEmail": {
            "type": "string",
            "nullable": true
          },
          "serviceProvider": {
            "type": "string",
            "nullable": true
          },
          "paymentTerms": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fineRatePerDay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "referenceNr": {
            "type": "string",
            "nullable": true
          },
          "contractDate": {
            "type": "string",
            "format": "date-time"
          },
          "companyLabel": {
            "type": "string",
            "nullable": true
          },
          "companyEmail": {
            "type": "string",
            "nullable": true
          },
          "companyPhone": {
            "type": "string",
            "nullable": true
          },
          "contactPersonName": {
            "type": "string",
            "nullable": true
          },
          "contactPersonEmail": {
            "type": "string",
            "nullable": true
          },
          "receiverCompanyId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ContractCustomFieldDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomFields": {
        "enum": [
          "DocumentType"
        ],
        "type": "string"
      },
      "CustomsDeclarationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "transitOperationRegistrationNumber": {
            "type": "integer",
            "format": "int32"
          },
          "transitOperationOfficeCode": {
            "type": "string",
            "nullable": true
          },
          "documentCode": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "taxIdReceiver": {
            "type": "string",
            "nullable": true
          },
          "taxId54": {
            "type": "string",
            "nullable": true
          },
          "originCountryCode": {
            "type": "string",
            "nullable": true
          },
          "declarationAcceptanceDate": {
            "type": "string",
            "format": "date-time"
          },
          "declarationSubmissionDate": {
            "type": "string",
            "format": "date-time"
          },
          "customsDate": {
            "type": "string",
            "format": "date-time"
          },
          "sysDate": {
            "type": "string",
            "format": "date-time"
          },
          "itemCount": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/CustomsDeclarationStatus"
          },
          "duties": {
            "$ref": "#/components/schemas/CustomsDeclarationPaymentStatus"
          },
          "taxTotal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dutyTotal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "versionsAvailable": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "customsInvoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "originCountriesCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "summedDtos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomsDeclarationDutySummedDto"
            },
            "nullable": true
          },
          "minFinCodeValuesSummedDtos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomsDeclarationMinFinCodeValuesSummedDto"
            },
            "nullable": true
          },
          "paymentsResponse": {
            "$ref": "#/components/schemas/CustomsDeclarationPaymentsDto"
          }
        },
        "additionalProperties": false
      },
      "CustomsDeclarationDutySummedDto": {
        "type": "object",
        "properties": {
          "vatCategoryCode": {
            "type": "string",
            "nullable": true
          },
          "dutyValueSummedType": {
            "$ref": "#/components/schemas/DutyValueSummedType"
          },
          "baseValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomsDeclarationIdsResponse": {
        "type": "object",
        "properties": {
          "customsDeclarationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomsDeclarationItemDocumentDto": {
        "type": "object",
        "properties": {
          "documentCode": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "ordinalNumber": {
            "type": "integer",
            "format": "int32"
          },
          "documentValue": {
            "type": "number",
            "format": "double"
          },
          "additionalInfo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomsDeclarationItemDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "exNum": {
            "type": "string",
            "nullable": true
          },
          "ordinalNumber": {
            "type": "integer",
            "format": "int32"
          },
          "bindingTariffReferenceValue": {
            "type": "number",
            "format": "double"
          },
          "taxExemptionCode": {
            "type": "string",
            "nullable": true
          },
          "taxExemptionMinFinCode": {
            "type": "string",
            "nullable": true
          },
          "originCountryCode": {
            "type": "string",
            "nullable": true
          },
          "taxExemptionReasonCode": {
            "type": "string",
            "nullable": true
          },
          "sysDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customsDeclarationItemDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomsDeclarationItemDocumentDto"
            },
            "nullable": true
          },
          "customsDeclarationItemDuties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomsDeclarationItemDutyDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomsDeclarationItemDutyDto": {
        "type": "object",
        "properties": {
          "dutyCode": {
            "type": "string",
            "nullable": true
          },
          "ordinalNumber": {
            "type": "integer",
            "format": "int32"
          },
          "baseValue": {
            "type": "number",
            "format": "double"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "dutyValue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CustomsDeclarationMinFinCodeValuesSummedDto": {
        "type": "object",
        "properties": {
          "minFinCode": {
            "type": "string",
            "nullable": true
          },
          "baseValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomsDeclarationPaymentDto": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "transitOperationRegistrationNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "transitOperationOfficeCode": {
            "type": "string",
            "nullable": true
          },
          "documentCode": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taxPayerTaxId": {
            "type": "string",
            "nullable": true
          },
          "taxDutyPayment": {
            "type": "number",
            "format": "double"
          },
          "customsDutyPayment": {
            "type": "number",
            "format": "double"
          },
          "exciseDutyPayment": {
            "type": "number",
            "format": "double"
          },
          "otherDutyPayment": {
            "type": "number",
            "format": "double"
          },
          "totalAmountPaid": {
            "type": "number",
            "format": "double"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "customsDeclarationStatus": {
            "$ref": "#/components/schemas/CustomsDeclarationStatus"
          }
        },
        "additionalProperties": false
      },
      "CustomsDeclarationPaymentStatus": {
        "enum": [
          "NoDuties",
          "NotPaid",
          "PartiallyPaid",
          "FullyPaid"
        ],
        "type": "string"
      },
      "CustomsDeclarationPaymentsDto": {
        "type": "object",
        "properties": {
          "totalPaidAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalVatPaidAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalAmountToPay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "remainingVatToPay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "remainingExcisesToPay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "remainingCustomsToPay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "remainingOtherDutiesToPay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomsDeclarationPaymentDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomsDeclarationStatus": {
        "enum": [
          "Active",
          "Modified",
          "BackVersion",
          "Cancelled"
        ],
        "type": "string"
      },
      "CustomsDeclarationStatusChangeResponse": {
        "type": "object",
        "properties": {
          "transitOperationRegistrationNumber": {
            "type": "integer",
            "format": "int32"
          },
          "transitOperationOfficeCode": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "documentType": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "changeDate": {
            "type": "string",
            "format": "date-time"
          },
          "oldStatus": {
            "$ref": "#/components/schemas/CustomsDeclarationPaymentStatus"
          },
          "newStatus": {
            "$ref": "#/components/schemas/CustomsDeclarationPaymentStatus"
          }
        },
        "additionalProperties": false
      },
      "DiscountDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "vatCategoryCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentDirection": {
        "enum": [
          "Inbound",
          "Outbound"
        ],
        "type": "string"
      },
      "DocumentIssueOrigin": {
        "enum": [
          "DocumentIssuedViaSef",
          "DocumentIssuedOutsideSef"
        ],
        "type": "string"
      },
      "DocumentReferenceTypes": {
        "enum": [
          "CreditNoteReferenceToInvoice",
          "CreditNoteReferenceToPrepaymentInvoice",
          "CreditNoteReferenceToPeriod",
          "StornoInvoice",
          "StornoPrepayment",
          "StornoDebitNote"
        ],
        "type": "string"
      },
      "DocumentType": {
        "enum": [
          "Invoice",
          "CreditNote",
          "DebitNote",
          "Prepayment"
        ],
        "type": "string"
      },
      "DutyValueSummedType": {
        "enum": [
          "Customs",
          "Excise",
          "VAT10",
          "VAT20",
          "Other"
        ],
        "type": "string"
      },
      "EFiscalizationFiscalBillNumbersForInvoiceRepresentation": {
        "type": "object",
        "properties": {
          "fiscalBillNumber": {
            "type": "string",
            "nullable": true
          },
          "transactionType": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "sufTaxCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EfakturaVersionDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorCodes": {
        "enum": [
          "Invalid",
          "ServiceIdNotUnique",
          "InvoiceNumberTooLong",
          "InvoiceCurrencyInvalid",
          "InvoiceNumberNotUnique",
          "IbanInvalid",
          "PasswordMissing",
          "CurrencyIdInvalid",
          "BankIdInvalid",
          "CompanyCountryIdInvalid",
          "AadressCountryIdInvalid",
          "RequiredCompanyAddressMissing",
          "UserCountryIdInvalid",
          "UserNotRegistered",
          "UserNotActivated",
          "UserNotFound",
          "SmartIdLoginCanceled",
          "SmartIdTimeout",
          "SmartIdUserNotRegistered",
          "MobileIdNotRegistered",
          "MobileIdCertificateError",
          "MobileIdCanceled",
          "MobileIdTimeout",
          "MobileIdSimNotReady",
          "MobileIdPhoneIsOff",
          "MobileIdSendingError",
          "MobileIdSimError",
          "LoginFailed",
          "MobileIdError",
          "SmartIdFailed",
          "DublicateUserPersonalId",
          "DublicateUsername",
          "UsernameTooShort",
          "ExtensionInvalid",
          "CodeInvalid",
          "CodeDuplicate",
          "DifferentPersonalId",
          "UserConfirmed",
          "ContractEmailMissing",
          "ContractAddressDoesNotMatchCompanyAddress",
          "ContractAddressNotDefined",
          "CompanyAddressNotDefined",
          "CompanyEmailMissing",
          "XmlInvalid",
          "EInvoiceMissing",
          "EInvoiceGlobalIdMissing",
          "EInvoiceGlobalIdDublicate",
          "EInvoiceNumberMissing",
          "EInvoiceNumberDublicate",
          "EInvoiceBuyerPartyMissing",
          "EInvoiceBuyerNameMissing",
          "EInvoiceBuyerRegNumberMissing",
          "EInvoiceSellerPartyMissing",
          "EInvoiceSellerNameMissing",
          "EInvoiceSellerRegNumberMissing",
          "EInvoiceInvoiceItemMissing",
          "EInvoiceInvoiceItemGroupMissing",
          "EInvoiceInvoiceItemDescriptionMissing",
          "EInvoiceInvoiceItemDetailInfoMissing",
          "EInvoiceInvoiceSumGroupMissing",
          "EInvoiceInvoiceCurrencyMissing",
          "EInvoiceInvoiceItemDetailInfoItemUnitMissing",
          "EInvoiceInvoiceItemsCountTooBig",
          "EInvoiceInvoiceItemsPriceTooBig",
          "EInvoiceInvoiceItemsPriceTooSmall",
          "EInvoiceInvoiceItemsPriceNegative",
          "EInvoiceInvoiceItemsAmountTooBig",
          "EInvoiceChannelIdMissing",
          "EInvoiceChannelAddressMissing",
          "EInvoiceChannelAddressInvalid",
          "EInvoiceChannelAddressWithSpace",
          "EInvoiceContractCurrencyConflict",
          "LogoTypeIsInvalid",
          "LogoSizeIsInvalid",
          "LogoDimensionsAreInvalid",
          "FileNameOrExtensionIsInvalid",
          "UserRegistered",
          "TokenExpired",
          "TokenInvalidOrExpired",
          "DublicateEmail",
          "SerializationError",
          "InvalidCategory",
          "InvalidGroup",
          "PasswordResetTokenAlreadyUsed",
          "PasswordResetTokenIncorrect",
          "PasswordAtLeastOneDigitRequired",
          "PasswordShouldBeEightCharsLong",
          "PasswordShouldBeWithUpperCase",
          "CompanyIdMissing",
          "IdCardInvalid",
          "CompanyRegcodeInvalid",
          "CompanyStatusInvalid",
          "NoPasswordSetForThisAccount",
          "NoTokenProvided",
          "SmartIdRunning",
          "MobileIdRunning",
          "InvoiceRowsMissing",
          "InvoiceRowDescriptionMissing",
          "InvoiceRowUnitMissing",
          "InvoiceRowVatRateNotAllowedForVatCategory",
          "InvoiceRowForDiscountPerVatCategoryNotDefined",
          "InvoiceRowForPrepaymentValuePerVatCategoryNotDefined",
          "InvoiceRowDiscountAmountMustBeInAccordanceWithDiscountPercentage",
          "InvoiceRowPrepaymentAmountNotDefined",
          "InvoiceRowForPrepaymentDomesticValuePerVatCategoryNotDefined",
          "ReferenceNumberInvalid",
          "InvoiceAlreadySent",
          "MissingIban",
          "CannotRejectInvoiceWithoutComment",
          "CannotAcceptRejectInvoiceWithoutReceiverIdOrinformationServiceProviderId",
          "CannotAcceptRejectInvoiceBothReceiverIdAndInformationServiceProviderIdAreDefined",
          "CirMaximumSizeOfCommentCrossed",
          "CirSpecialCharactersNotAllowed",
          "BankAccountIncorrect",
          "FileTooBig",
          "InvalidCompanyId",
          "EInvoiceSellerNameNotTheSame",
          "EInvoiceSellerRegNumberNotTheSame",
          "EmailMissing",
          "CompanyNameInvalid",
          "ChannelInvalid",
          "BudgetCompanyDataInvalid",
          "CurrencyInvalid",
          "ProformaCannotBeCreditInvoice",
          "InvoiceNumberInvalid",
          "PackageIdInvalid",
          "PayablePackageMissingFields",
          "CompanyInfoMissing",
          "PackageDowngradingOnlyByServiceDesk",
          "OneClickOrderInsufficientRole",
          "ServiceIdMissing",
          "RegCodeMissing",
          "PersonalIdMissing",
          "LursoftError",
          "GetCompanyVatNumberNotDefined",
          "GetCompanyRegistrationCodeNotDefined",
          "GetCompanyAdditionalCodeNotDefined",
          "TooManyAttachments",
          "StornoCommentNotDefined",
          "CancelCommentNotDefined",
          "NoInvoiceFilesToDownload",
          "InvoiceDeliveryDateMissing",
          "CreditNoteReductionDateMissing",
          "DebitNoteIncreaseDateMissing",
          "InvoiceDueDateMissing",
          "SearchDateIsNotCorrectlyDefined",
          "SearchDateBiggerThanYesterday",
          "SearchDateBiggerThanToday",
          "InvoiceDateLaterThanToday",
          "PaymentDateMoreThan90DaysInFuture",
          "IssueDateCannotBeDifferentFromTodays",
          "IssueDateMustBeProvided",
          "CreateCirTicketFailed",
          "CancelCirTicketFailed",
          "CannotSendPrepaymentInvoiceToCir",
          "CannotSendDebitNoteToCir",
          "SendingPrepaymentInvoiceToCir",
          "SendingCreditInvoiceToCir",
          "SendingDebitNoteToCir",
          "ContractNumberBetweenSenderAndReceiverIsMandatoryForBudgetUsers",
          "ContractNumberBetweenSenderAndReceiverIsMandatoryForCirInvoice",
          "EfakturaInvoiceForCIRInvoiceIdNotFound",
          "CannotSendCreditInvoiceToCir",
          "NegativeTotalSumCirInvoice",
          "MoreThanOnePrepaymentInvoiceWithSameInvoiceNumber",
          "InvalidCaptcha",
          "AprDataIncomplete",
          "AprCompanyNotFound",
          "AprMultipleCompaniesFound",
          "SsoTokenValidationFaild",
          "UserHasNoActiveCompanies",
          "RequiresAALLevel2",
          "RequiresAALLevel3",
          "RequiresIALLevel1",
          "RequiresIALLevel2",
          "RequiresIALLevel3",
          "UserNotLegalRepresentative",
          "SignUpFailed",
          "AprCallFailed",
          "UserInvitationInvalid",
          "KjsRegisterMultipleBudgetCompaniesFound",
          "KjsRegisterCompanyNotFound",
          "BankIsNotSupported",
          "ErrorCallingTaxAuthority",
          "ErrorCallingTaxAuthorityCompanyDataEmpty",
          "CompanyOneClickOrderDisabled",
          "TaxAuthorityCompanyDataNotFound",
          "CannotBeCreditAndDebitInvoiceAtTheSameTime",
          "CreditInvoiceMustHaveSource",
          "DebitInvoiceMustHaveSource",
          "SourceInvoiceNotFound",
          "SourceInvoiceSelectionModeNotDefined",
          "SourceInvoicesNotDefined",
          "SourceInvoicePeriodNotDefinedCorrectly",
          "UnknownSourceInvoiceSelectionMode",
          "RequiredSourceInvoiceNumbersNotChosen",
          "ValueOfExchangeRateCannotBeEmptyOrZero",
          "CannotSendToCirDocumentWithForeignCurrency",
          "SourceDocumentNumberMustBeUnique",
          "ReceiverIdNotDefinedOnChangeSalesInvoiceStatusByProcessAction",
          "CancelInvoiceMessageNotDefinedOnChangeSalesInvoiceStatusByProcessAction",
          "StornoInvoiceMessageNotDefinedOnChangeSalesInvoiceStatusByProcessAction",
          "SenderCompanyEndpointIdentifierMissing",
          "SenderEndpointSchemeIDInvalid",
          "SenderEndpointValueEmpty",
          "CompanyNumberLengthInvalid",
          "SenderJBKJSLengthInvalid",
          "SenderMissedAddingJBKJSPrefix",
          "SenderCompanyNotFound",
          "CompanyNotFound",
          "InvalidSenderCompany",
          "InvalidSenderEmail",
          "InvalidSenderContactEmail",
          "InvalidSendToCirMode",
          "ReceiverCompanyEndpointIdentifierMissing",
          "ReceiverEndpointSchemeIDInvalid",
          "ReceiverEndpointValueEmpty",
          "ReceiverCompanyNotFound",
          "ReceiverJBKJSLengthInvalid",
          "ReceiverMissedAddingJBKJSPrefix",
          "InvoiceReceiverMissing",
          "InvoiceReceiverChannelMissing",
          "InvoiceReceiverChannelInvalid",
          "InvalidReceiverEmail",
          "InvoiceNotApprovedByReceiver",
          "InvoiceNotApprovedOrRejectedByReceiver",
          "FiscalBillNumberNotUnique",
          "FiscalBillNumberMustBeTheSame",
          "FiscalBillMustHaveDefinedPayments",
          "FiscalBillMustHaveDefinedInvoiceItems",
          "FiscalBillMustHaveDefinedInvoiceTaxRateItems",
          "ReferentDocumentSdcTimestampIsRequired",
          "ReferentDocumentNumberIsRequired",
          "TaxRateGroupIdIsRequired",
          "SdcTimestampIsRequired",
          "InvoiceNotInAppropriateStatusToBeReversed",
          "InvoiceItemNameTooLong",
          "UBLUnsupportedDocumentType",
          "UBLSourceInvoiceNotFound",
          "UBLSourceInvoiceNumberNotExist",
          "UBLSourceInvoiceNumberNotFound",
          "UBLSourceInvoiceNotApproved",
          "UBLSourceInvoiceUnallowedStatus",
          "UBLCannotBeDefinedInvoiceDocumentReferenceIDWithInvoicePeriodStartDateAndInvoicePeriodEndDateParameters",
          "UBLNotRegularTypeOfSourceInvoice",
          "UBLCreditNoteCannotHaveSourceInvoiceAndPrepayment",
          "UBLNotRegularTypeOfDocumentForThisSourceInvoice",
          "UBLOnlyOneTaxSubtotalPerTaxCategoryIsAllowed",
          "UBLPrepaymentInvoiceNotDefined",
          "UBLPrepaymentInvoiceNotFound",
          "UBLNotRegularTypeOfSelectedPrepaymentInvoice",
          "UBLMandatoryInvoiceDocumentReference",
          "UBLUndefinedPayableAmount",
          "UBLNotAllowedTaxAmountForRecipientCalculatesVAT",
          "UBLNotAllowedSubtotalTaxAmountForRecipientCalculatesVAT",
          "UBLNotAllowedPercentOfTaxableAmountForRecipientCalculatesVAT",
          "UBLNotAllowedTaxAmountForExemptionFromVAT",
          "UBLNotAllowedSubtotalTaxAmountForExemptionFromVAT",
          "UBLNotAllowedPercentOfTaxableAmountForExemptionFromVAT",
          "UBLTaxTotalNotDefined",
          "UBLTaxAmountNotDefined",
          "UBLTaxCategoryNotDefined",
          "UBLTaxCategoryIdNotDefined",
          "UBLClassifiedTaxCategoryNotDefined",
          "UBLPercentOfTaxableAmountNotDefined",
          "UBLTaxSubtotalNotDefined",
          "UBLTaxSubtotalAmountlNotDefined",
          "UBLTotalTaxAmountAndSubtotalTaxAmountDiffer",
          "UBLTaxExemptionReasonNotInAppropriateFormat",
          "UBLTaxExemptionReasonKeyNotDefined",
          "UBLTaxExemptionReasonCategoryNotDefined",
          "UBLTaxExemptionReasonCategoryNotAllowed",
          "UBLTaxExemptionReasonCategoryNotCorrect",
          "UBLTaxExemptionReasonLineCategoryNotCorrect",
          "UBLErrorOccurredDuringReadingTaxTotalDetails",
          "UBLErrorOccurredDuringReadingInvoiceLineTaxTotalDetails",
          "UBLTaxCategoryIdUnknown",
          "UBLJBKJSNotDefined",
          "UBLPartyIdentificationIdIsNotInCorrectFormat",
          "UBLJBKJSIdentificationIdMustBeDefinedOnlyOnce",
          "UBLSenderCompanyAndSenderCompanyIdentiferDoNotMatch",
          "UBLReceiverCompanyIdentifierMissing",
          "UBLCannotBeDefinedPartyIdentificationIdForNonBudgetCompany",
          "UBLFileNotFound",
          "UBLCompanyIsNonBudgetUser",
          "UBLCompanyIsBudgetUser",
          "UBLCompanyWithVATRegistrationCodeIsBudgetUser",
          "UBLVATRegistrationCodeDoesNotMatchTheRegistrationCodeOfTheCompanyWithJBKJS",
          "UBLRegistrationCodeNotInCorrectFormat",
          "UBLAttachmentObjectIsNotDefined",
          "UBLPublicContractSignerJBKJSNotInCorrectFormat",
          "UBLPaymentMeansNotDefined",
          "UBLPaymentMeansCodeNotDefined",
          "UBLPayeeFinancialAccountIdNotDefined",
          "UBLReferenceAndModelNumberFormatNotValid",
          "UBLDeliveryDateNotAllowedForThisInvoiceType",
          "UBLDeliveryDateMustNotBeLatterThanIssueDate",
          "UBLIncreaseDateMustNotBeLatterThanIssueDate",
          "UBLReductionDateMustNotBeLatterThanIssueDate",
          "UBLPrepaymentDateMustNotBeLatterThanIssueDate",
          "UBLTaxAmountMoreDecimalsThanPermitted",
          "UBLTaxSubtotalTaxableAmountMoreDecimalsThanPermitted",
          "UBLTaxSubtotalTaxAmountMoreDecimalsThanPermitted",
          "UBLInvoiceLineExtensionAmountMoreDecimalsThanPermitted",
          "UBLInvoiceLinePriceAmountMoreDecimalsThanPermitted",
          "UBLLineExtensionAmountMoreDecimalsThanPermitted",
          "UBLTaxExclusiveAmountMoreDecimalsThanPermitted",
          "UBLTaxInclusiveAmountMoreDecimalsThanPermitted",
          "UBLAllowanceTotalAmountMoreDecimalsThanPermitted",
          "UBLPrepayedAmountMoreDecimalsThanPermitted",
          "UBLPayableAmountMoreDecimalsThanPermitted",
          "UBLPrepaymentInvoiceLineUnitCodeNotValid",
          "UBLPrepaymentInvoiceLineQuanitityNotValid",
          "UBLInvoiceExtensionNotDefined",
          "UBLInvoiceExtensionSrbDtExtNotValid",
          "UBLInvoiceExtensionReducedTotalsTaxTotalNotValid",
          "UBLInvoiceExtensionReducedTotalsTaxSubtotalNotDefined",
          "UBLBillingReferenceMissing",
          "UBLTaxCategoryNotAllowed",
          "UBLOnlyOneTaxSubtotalAllowedPerCategory",
          "UBLOrderNumberLotNumberOrContractNumberIsRequired",
          "UBLVatRegistrationCodesDoesNotMatch",
          "UBLPartyTaxSchemeCompanyIdWithoutPrefix",
          "UBLVatRegistrationCodeDoesNotHaveGoodLength",
          "UBLRegistrationCodeDoesNotHaveGoodLength",
          "UBLVatTaxSchemeIdNotValid",
          "UBLInvoiceNumberInvalid",
          "UBLInvoiceNumberContainsInvalidCharacters",
          "UBLDocumentCurrencyNotValid",
          "UBLForeignCurrencyShouldHaveTwoTaxTotals",
          "UBLCannotSendToCirDocumentWithForeignCurrency",
          "UBLMissingDocumentCurrency",
          "UBLIncorrectVatRateForStandardVatRate",
          "UBLInvoiceExtensionNotContainPrepaymentData",
          "UBLMaxNoteLengthExceeded",
          "UBLDueDateIsMissing",
          "UBLProductNameLengthExceeded",
          "UBLUploadRequestIdDuplicate",
          "UBLFileNotUploaded",
          "UBLReceiverCannotSendToCir",
          "UBLInvoiceWithPrepaymentInStatusStorno",
          "UBLMoreThanOnePrepaymentInvoiceWithSameInvoiceNumber",
          "UBLSourceDocumentNumberMustBeUnique",
          "UBLCannotHaveDuplicateInvoicePrepaymentAmount",
          "UBLPublicContractSignerNotBudgetUser",
          "UBLPublicContractSignerNotFound",
          "UBLPublicContractSignerNotActive",
          "UBLPublicContractSignerValueLength",
          "UBLFiscalInvoiceImportFiscalBillsAlreadyInvoiced",
          "UBLFiscalInvoiceImportNotAllFiscalBillsExist",
          "UBLInvoiceMissingFiscalBillsOrDate",
          "UBLFiscalInvoiceImportMoreThanOneBuyer",
          "UBLFiscalInvoiceImportInvalidInvoiceDate",
          "UBLDocumentNotValid",
          "UBLInvoiceInForeignCurrencyMustContainInvoicedPrepaymentAmountTaxTotalInCurrency",
          "UBLInvoiceInForeignCurrencyMustContainSrbDtExtReducedTotalsTaxTotalInCurrency",
          "ThereAreNotDefinedElementTaxtotalInDomesticCurrency",
          "ThereAreNotDefinedElementTaxtotalInForeignCurrency",
          "UBLTheNumberOfElementsInForeignCurrencyDoesNotMatchTheNumberOfElementsInDomesticCurrency",
          "VATNumberNotActive",
          "VATRegistrationCodeLengthInvalid",
          "VATRegistrationCodeDoesNotMatchTheRegistrationCodeOfTheCompanyWithJBKJS",
          "VatPointDateTypeNotAllowedForChosenDocumentType",
          "VATCategoryNotAllowed",
          "VatExemptionReasonNotExists",
          "VatExemptionFreeFormNoteNotDefined",
          "VatExemptionReasonIdNotDefined",
          "VatExemptionReasonKeyNotDefined",
          "VatExemptionReasonPointOfLawNotActive",
          "VatExemptionCategoryIsNotInUse",
          "VatExemptionReasonNotDefinedForDecisionNumber",
          "VATExemptionCategoryNotDeffined",
          "VATReasonCodeForVATExemptionCategoryNotDeffined",
          "VATReasonCodeForRealEstateAndNotRealestateMixNotAllowed",
          "TheForeignCurrencyValueOfTheSelectedPrepaymentInvoiceIsMandatory",
          "TheDomesticCurrencyValueOfTheSelectedPrepaymentInvoiceIsMandatory",
          "SelectedPrepaymentInvoiceNotCorrectInvoiceId",
          "SelectedPrepaymentInvoiceNotCorrectInvoiceNumber",
          "SelectedPrepaymentInvoiceNotCorrectPrepayedAmount",
          "SelectedPrepaymentInvoiceNotCorrectPrepayedVAT",
          "SelectedPrepaymentInvoiceNotCorrectCurrency",
          "SelectedPrepaymentInvoiceNotCorrectPaymentDate",
          "SelectedPrepaymentInvoiceNotCorrectContractId",
          "PrepaymentInvoicesDetailsNotDefined",
          "PrepaymentTotalAmountCalculationNotDefined",
          "CannotAddPrepaymentWithoutBuyer",
          "PrepaymentReceiverNotSameAsDocumentReceiver",
          "GetCustomsAdministrationCodebookFailed",
          "RequestParameterDateNotDefined",
          "CallCASDataExchangeError",
          "InvoiceTypeCodeMissing",
          "DocumentTypeCodeInvalid",
          "CreditNoteTypeCodeNotCorrent",
          "SourceInvoiceCannotBePrepaymentInvoiceType",
          "SalesInvoiceNotFound",
          "PurchaseInvoiceNotFound",
          "InvoiceHasNoAEVatCategory",
          "InvoiceStornoCancellationDataNotDefined",
          "InvoiceCancellationDataNotDefined",
          "FailedInvoiceCancellation",
          "GetAprDataFromEsbFailed",
          "NoneOfInputParametersIsDefined",
          "SomeOfInputParametarsNotDefined",
          "CompanyWithRegistrationNumberIsBudgetUser",
          "CompanyWithVATRegistrationCodeIsBudgetUser",
          "CannotGetCompanyByPassingCompanyNumberAsRegistrationNumber",
          "AssignatorCompanyNotFound",
          "AssignatorCompanyIsNotBudgetUser",
          "CompanyWithJBKJSNotFound",
          "CompanyDoesNotHaveDefinedRegistrationCodeAndAdditionalCode",
          "CompanyWithRegistrationCodeNotFound",
          "CompanyWithVATRegistrationCodeNotFound",
          "InvoicePeriodNotDefined",
          "InvoicePeriodDescriptionCodeNotDefined",
          "InvoicePeriodDescriptionCodeNotProperlyDefined",
          "InvoicePeriodDescriptionCodeNotNeeded",
          "UserAlreadyRegisteredToAnotherAccount",
          "AllAttachedInvoicesToThisInvoiceMustBeCancelledFirst",
          "AllAttachedInvoicesToThisInvoiceMustBeStornoFirst",
          "AllAttachedFinalInvoicesToThisPrepaymentInvoiceMustBeReversedFirst",
          "InvoiceForCancellationNotFound",
          "InvoiceForCancellationNotInSpecificStatus",
          "InvoiceForCancellationNotLongEnoughInSendingStatus",
          "InvoiceForApproveRejectNotFound",
          "InvoiceStatusChangeNotSynchronized",
          "InvoiceForFactoringNotFound",
          "WrongInvoiceTypeForStorno",
          "InvoiceCannotBeStornoCancelled",
          "SendToCirParameterMustBeDefinedForBudgetUser",
          "ReceiverBudgetCompanyNotActive",
          "SenderBudgetCompanyNotActive",
          "SenderBudgetCompanyDoesNotExist",
          "CompanySetAsISP",
          "ErrorCheckingIfCompanyIsRepresentedByISP",
          "ISPCannotRepresentCompany",
          "InvoiceIdNotDefined",
          "InvalidPurchaseStatus",
          "InvalidSalesStatus",
          "ISPNotFound",
          "ISPMustBeChosen",
          "CannotDownloadLinkAttachment",
          "DifferentSerbiaCompanyType",
          "CompanyMissingCompanyType",
          "InvalidCompanyNumber",
          "InvalidVatNumber",
          "GroupVatRecordingNotFound",
          "ISPIsNotActive",
          "VatRecordingPublished",
          "GroupVatRecordingAlreadySent",
          "PublicContractSignerNotBudgetUser",
          "PublicContractSignerNotFound",
          "PublicContractSignerNotActive",
          "IndividualVatRecordingNotFound",
          "GroupIndividualVatRecordingAlreadySent",
          "ISPIsSetForCompanyAnyOperationIsForbidden",
          "CompanyMarkedAsDeleted",
          "ClientConfirmedISPWillStoreInvoiceDetails",
          "DocumentPeriodAndSourceInvoicesCannotBeSetAtSameTime",
          "InvoiceItemsAmountTooBig",
          "OrderNumberLotNumberOrContractNumberIsRequired",
          "TotalToPayMoreDecimalsThanPermitted",
          "SumWithVatMoreDecimalsThanPermitted",
          "SumWithoutVatMoreDecimalsThanPermitted",
          "VatSumMoreDecimalsThanPermitted",
          "RoundingAmountMoreDecimalsThanPermitted",
          "UnitPriceMoreDecimalsThanPermitted",
          "NetAmountMoreDecimalsThanPermitted",
          "GrossAmountMoreDecimalsThanPermitted",
          "InvoiceSigningFail",
          "WrongCompanyTypeShouldUseBudgetUser",
          "TreasuryRegistrationNotBudgetUser",
          "EFiscalizationDataNotComplete",
          "DocumentCurrencyNotValid",
          "CannotUpdateDocumentStatusNotAppropriate",
          "CannotDeleteInvoiceInThisStatus",
          "CalculationNumberNotUnique",
          "CannotChangeGroupVatInThisStatus",
          "CannotDeleteGroupVatInThisStatus",
          "ActionNotAllowedForThisVersion",
          "CannotChangeIndividualVatInThisStatus",
          "CannotDeleteIndividualVatInThisStatus",
          "CalculationNumberRequired",
          "CannotCancelVatRecordingInThisStatus",
          "RelatedDocumentRequired",
          "NotAllowedRelatedDocuments",
          "UpdateSalesInvoiceStatus",
          "UpdatePurchaseInvoiceStatusFailed",
          "VatDeductionRightNotAllowed",
          "CalculationNumberNotCorrect",
          "GroupVatYearRequired",
          "IndividualCalculationNumberNotUnique",
          "CannotChooseVatDeductionRight",
          "VatDeductionRightRequired",
          "InternalInvoiceOptionNotValid",
          "InvoiceWithPrepaymentInStatusStorno",
          "CannotApproveDocumentIfReceiverIsBudgetUser",
          "OnlyOneTaxCategoryAllowed",
          "RequiredRequestId",
          "MustStoreInvoiceInSEF",
          "IndividualVatYearRequired",
          "CIRCompanyByJBKJSNotFound",
          "CirCompanyNotFound",
          "CIRMatchBUByCompanyNumber",
          "CirInvoiceNotFound",
          "CirInvoiceIdNotDefined",
          "CirInvoiceNotInAssignedStatus",
          "CirCompanyRegistrationResponseNotFound",
          "CirUndefinedCompanyStatus",
          "CirUnsavedCompanyRegistrationResponse",
          "CirError",
          "GetCirCompanyError",
          "GetCirCompanyUnexpectedCirId",
          "CirUnsucessfulInvoiceRejection",
          "CirUnsuccessfulSubmitCompanyRegistration",
          "CirUnsuccessfulApprovementOfCompanyRegistration",
          "CirUnsuccessfulCancellationOfCompanyRegistration",
          "CirSubmitCompanyRegistrationNullResponse",
          "CirApproveCompanyRegistrationNullResponse",
          "CirCancelCompanyRegistrationNullResponse",
          "CirUnknownCompanyRegistrationStep",
          "CirIdNotFound",
          "CirInvoiceIsAlreadyCancelled",
          "CirSendInvoiceFailed",
          "CirCompanyRegistrationError",
          "CirAlreadySubmitedRegistrationRequestForThisEntity",
          "CirFailedToRetrieveValidAccountRegistrationRequests",
          "CirErrorAmountDeltaExceedAmountTolerance",
          "CirAttemptingToAddLiabilityAmoundDeltaForInvalidCreditor",
          "CRFAssignationNotAllowedOnSEF",
          "CirUserWithSpecifiedLoginNameHasAlreadyBeenApproved",
          "TaxPeriodWrongMonth",
          "TaxPeriodNotFound",
          "TaxPeriodDuplicateRequest",
          "TaxPeriodWrongType",
          "TaxPeriodWrongObligationStatus",
          "TaxPeriodDeleteNotPossible",
          "TaxPeriodCompanyNotCentralEntity",
          "TaxPeriodPastDate",
          "UnknownError",
          "EFiscalizationError",
          "EFiscalizationFiscalBillIdIsInvalid",
          "EFiscalizationCompanyIdNotFound",
          "InvalidRestrictionFieldValue",
          "InvoiceReceiverAndFiscalBillBuyerAreNotSame",
          "NotAllFiscalBillsInDateRangeAddedToInvoice",
          "AtLeastOneFiscalBillAfterDateRange",
          "AtLeastOneFiscalBillAfterInvoiceDate",
          "AtLeastOneFiscalBillBeforeDateRange",
          "BuyerIsNotOnSellersContactList",
          "SufTaxCodeIsNullWhiteSpaceOrEmpty",
          "SufTaxCodeHaveMoreThanOneCharacter",
          "SufTaxCodeIsNotCyrillicLetter",
          "SufTaxCodeIsLowerCase",
          "RefundNeedsToBeCreditNote",
          "RefundInvociesNeedReferentDocuments",
          "RefundInvociesReferentDocumentIdInvalid",
          "RefundInvociesReferentDocumentDoesNotExist",
          "FiscalBillsNotFoundInUBL",
          "CannotCreateInvoiceForRefundFiscalBill",
          "NoReferenceToInvoiceBeingRefundedViaFiscalBill",
          "CouldNotGetBuyerIdFromFiscalBIll",
          "DocumentTotalNotEqualToFiscalBillTotal",
          "FiscalInvoiceInvalidInvoiceDate",
          "ExportInvoiceNumberAlreadyExists",
          "SignatureNotFound",
          "StoreSignatureError",
          "FileNotFound",
          "InvoicePdfFileNotFound",
          "DownloadInvoicePdfFileFailed",
          "EFiscalizationFiscalBillIsNotFound",
          "EFiscalizationFiscalBillAlreadyBelongToSalesInvoice",
          "EFiscalizationReceiverCompanyNotFound",
          "EFiscalizationFailedToParseReferentDocumentNumberFromRefundFiscalBill",
          "EFiscalizationRefundFiscalBillsWithoutSalesFiscalBills",
          "EFiscalizationProblematicReferencedFiscalBillsInCreditNoteCreationFromRefundFiscalBills",
          "FailedToGroupFiscalBills",
          "EFiscalizationMissingFiscalBillsWhileTryingToGroupByDocumentType",
          "EFiscalizationFailedToGroupFiscalBillsByReceiver",
          "EFiscalizationInvalidRefundFiscalBills",
          "EFiscalizationErrorMessageIsMissing",
          "EFiscalizationFailedToFindReceiverTin",
          "EFiscalizationFailedToParseFiscalBill",
          "EFiscalizationRefundFiscalBillReferencingSalesFiscalBillWithWrongStatus",
          "EFiscalizationThereIsNoAnyValidFiscalBillsForThisReceiver",
          "EFiscalizationRefundFiscalBillReferencingInvoicedSalesFiscalBillWithWrongInvoiceStatus",
          "EfiscalizationFiscalBillItemInvalidVatCode",
          "EfiscalizationRefundFiscalBillsWithoutReferentDocumentNumber",
          "EfiscalizationRefundFiscalBillsWithoutReferentedSalesFiscalBill",
          "EfiscalizationRefundFiscalBillsReferencingNonInvoicedSalesFiscalBills",
          "EfiscalizationRefundFiscalBillsReferencingInvoicedSalesFiscalBillsThatHaveInvoiceInWrongStatus",
          "EfiscalizationRefundFiscalBillsThatFailedUnknownValidation",
          "ConvertLocalDateTimesToUtcFailed",
          "ExportToCsvPeriodLongerThanExpectedIncomingDocuments",
          "ExportToCsvPeriodLongerThanExpectedOutgoingDocuments",
          "ExportToCsvPeriodLongerThanExpectedPublicContractorDocuments",
          "EfiscalizationUnexpectedInvoiceTypeCode",
          "EfiscalizationFailedToGetBuyerExtendedIds",
          "EfiscalizationUnexpectedValueInTheAdditionalDocumentReference",
          "EfiscalizationFailedToConstructBuyerExtendedIdsDuringDraftDocumentCreation",
          "EfiscalizationTinIsRequired",
          "EfiscalizationBuyerIsRequired",
          "EfiscalizationTinAndBuyerFieldsCanNotHaveTheSameValue",
          "EfiscalizationRefundFiscalInvoiceNotReferencingSalesFiscalInvoice",
          "VatDeductionNotificationOneOrMoreMandatoryFieldsMissing",
          "VatDeductionNotificationNoticeNumberTooLong",
          "VatDeductionNotificationNoticeNumberNotUnique",
          "VatDeductionNotificationTotalVatAmountUnallowedValue",
          "VatDeductionNotificationRelatedDocumentStornoDateNotAllowed",
          "VatDeductionNotificationRelatedInvoicePeriodStartDateNotAllowed",
          "VatDeductionNotificationRelatedInvoicePeriodEndDateNotAllowed",
          "VatDeductionNotificationSenderCompanyMissing",
          "VatDeductionNotificationRecipientCompanyMissing",
          "VatDeductionNotificationInvalidSourceDocument",
          "VatDeductionNotificationCompanyIsNotVatObligor",
          "VatDeductionNotificationCompanyHasNeverBeenVatObligor",
          "VatDeductionNotificationNoticeNotFound",
          "YearIsMandatory",
          "YearCannotBeLessThan2022",
          "TheLengthOfTheYearValueMustBeFourDigitsLong",
          "CalculationNumberIsMandatory",
          "ValuesShouldHaveMaximumTwoDecimalPlaces",
          "ValueIsNotInADefinedRange",
          "TheCalculationNumberOfTheGroupVatRecordsMustBeUnique",
          "TheGroupVatRecordWithIdAndCalculationNumberNotFound",
          "TheGroupVatRecordWithIdNotFound",
          "TheGroupVatRecordIsNotInRecordStatus",
          "TheGroupVatRecordIsNotInDraftStatus",
          "CannotHaveValueForInternalInvoiceOption",
          "InvalidDocumentType",
          "CalculationNumberOfIndividualVatRecordMustBeUnique",
          "AllFieldsAreEmpty",
          "PropertyShouldBeEmpty",
          "CannotHaveThisTypeOfRelatedVatRecords",
          "CannotHaveRelatedVatRecords",
          "RelatedVatRecordMustBeRecorded",
          "CannotHaveThisDocumentTypeOfRelatedVatRecord",
          "InvalidValueOfRelatedInvoiceOption",
          "CannotHaveManyRelatedVatRecords",
          "EmptyInternalInvoiceOption",
          "InvalidInternalInvoiceOptionOfRelatedVatRecord",
          "InvalidRelatedInternalInvoiceOption",
          "CannotHavePrepaymentDate",
          "CannotHaveDefinedPeriod",
          "InvalidRangePeriod",
          "VatRecordNotExists",
          "CannotPopulateDocumentNumber",
          "CannotPopulateInternalInvoiceNumber",
          "CannotRemoveVatRecordInThisStatus",
          "CannotCancelBeacuseOfRelatedVatRecords",
          "DocumentNumberRequired",
          "InternalInvoiceNumberRequired",
          "TheIndividualVatRecordIsNotInRecordStatus",
          "VatRecordWithCalculationNumberDoesNotExist",
          "RelatedVatRecordDoesNotExist",
          "EnumValueNotDefined",
          "TheIndividualVatRecordWithIdAndCalculationNumberNotFound",
          "AmountNotInRange",
          "MaximumLengthString",
          "DateFromBiggerThanDateTo",
          "AllAmountsInSectionMustBePopulated",
          "CannotHaveRealEstateAndNoRealEstateValues",
          "ErrorSavingFile",
          "GetDespatchAdvicesError",
          "GetDespatchAdviceByUniqueIdError",
          "LinkDespatchAdviceWithInvoiceError",
          "TheAttachmentFileNameHasUnexpectedCharacters",
          "TheAttachmentFileNameIsNotDefined",
          "IndividualVatRecordingRequestDuplicate",
          "GroupVatRecordingRequestDuplicate",
          "TheValueOfItemClassificationCodeIsNotValidForDefinedListID",
          "DownloadRecipientsNoticePdfFileFailed"
        ],
        "type": "string"
      },
      "ExemptionReasonByVatCategoryDto": {
        "type": "object",
        "properties": {
          "vatCategoryCode": {
            "type": "string",
            "nullable": true
          },
          "reasonCode": {
            "type": "string",
            "nullable": true
          },
          "exemptionDecisionNumber": {
            "type": "string",
            "nullable": true
          },
          "feeItemsValueWithoutVat": {
            "type": "number",
            "format": "double"
          },
          "discountFeeWithoutVat": {
            "type": "number",
            "format": "double"
          },
          "feeWithoutVat": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Extension": {
        "type": "object",
        "properties": {
          "extensionId": {
            "type": "string",
            "nullable": true
          },
          "informationName": {
            "type": "string",
            "nullable": true
          },
          "informationContent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FiscalBillItemOutputApiDto": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "labels": {
            "type": "string",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FiscalBillOutputApiDto": {
        "required": [
          "tin"
        ],
        "type": "object",
        "properties": {
          "tin": {
            "minLength": 1,
            "type": "string"
          },
          "buyer": {
            "type": "string",
            "nullable": true
          },
          "buyerAdditionalField": {
            "type": "string",
            "nullable": true
          },
          "transactionType": {
            "type": "integer",
            "format": "int32"
          },
          "sdcTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "referentDocumentNumber": {
            "type": "string",
            "nullable": true
          },
          "referentDocumentSdcTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "taxRateGroupId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "fiscalBillNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FiscalBillPaymentOutputApiDto"
            },
            "nullable": true
          },
          "invoiceItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FiscalBillItemOutputApiDto"
            },
            "nullable": true
          },
          "invoiceTaxRateItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FiscalBillTaxRateItemOutputApiDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FiscalBillPaymentOutputApiDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "FiscalBillSimpleDto": {
        "type": "object",
        "properties": {
          "fiscalBillId": {
            "type": "integer",
            "format": "int64"
          },
          "fiscalBillNumber": {
            "type": "string",
            "nullable": true
          },
          "sellerTin": {
            "type": "string",
            "nullable": true
          },
          "sellerName": {
            "type": "string",
            "nullable": true
          },
          "buyerTin": {
            "type": "string",
            "nullable": true
          },
          "buyerName": {
            "type": "string",
            "nullable": true
          },
          "transactionType": {
            "type": "integer",
            "format": "int32"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "isInvoiceCreated": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "invoiceSentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FiscalBillTaxRateItemOutputApiDto": {
        "type": "object",
        "properties": {
          "rate": {
            "type": "number",
            "format": "double"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FiscalBillViewDto": {
        "type": "object",
        "properties": {
          "fiscalBills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FiscalBillSimpleDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FullReceiverRecipientsNoticeDto": {
        "type": "object",
        "properties": {
          "noticeNumber": {
            "type": "string",
            "nullable": true
          },
          "noticeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalVatAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "documentIssueOrigin": {
            "$ref": "#/components/schemas/DocumentIssueOrigin"
          },
          "basisOfNotice": {
            "$ref": "#/components/schemas/BasisOfNotice"
          },
          "documentReferenceType": {
            "$ref": "#/components/schemas/DocumentReferenceTypes"
          },
          "relatedDocumentNumber": {
            "type": "string",
            "nullable": true
          },
          "relatedDocumentIssueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "relatedInvoicePeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "relatedInvoicePeriodEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "relatedDocumentStornoDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sender": {
            "$ref": "#/components/schemas/CompanyDetailsDto"
          },
          "recipient": {
            "$ref": "#/components/schemas/CompanyFullDetailsDto"
          },
          "salesInvoiceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FullSenderRecipientsNoticeDto": {
        "type": "object",
        "properties": {
          "noticeNumber": {
            "type": "string",
            "nullable": true
          },
          "noticeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalVatAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "documentIssueOrigin": {
            "$ref": "#/components/schemas/DocumentIssueOrigin"
          },
          "basisOfNotice": {
            "$ref": "#/components/schemas/BasisOfNotice"
          },
          "documentReferenceType": {
            "$ref": "#/components/schemas/DocumentReferenceTypes"
          },
          "relatedDocumentNumber": {
            "type": "string",
            "nullable": true
          },
          "relatedDocumentIssueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "relatedInvoicePeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "relatedInvoicePeriodEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "relatedDocumentStornoDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "recipient": {
            "$ref": "#/components/schemas/CompanyFullDetailsDto"
          },
          "sender": {
            "$ref": "#/components/schemas/CompanyDetailsDto"
          },
          "sendingStatus": {
            "$ref": "#/components/schemas/SenderRecipientsNoticeStatus"
          },
          "salesInvoiceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "purchaseInvoiceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupVatAddDto": {
        "required": [
          "year"
        ],
        "type": "object",
        "properties": {
          "year": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "vatPeriod": {
            "$ref": "#/components/schemas/VatPeriod"
          },
          "turnoverWithFee": {
            "$ref": "#/components/schemas/VatTurnoverAddDto"
          },
          "turnoverWithoutFee": {
            "$ref": "#/components/schemas/VatTurnoverAddDto"
          },
          "futureTurnover": {
            "$ref": "#/components/schemas/VatTurnoverAddDto"
          },
          "turnoverDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "vatReductionFromPreviousPeriodAmount": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "vatIncreaseFromPreviousPeriodAmount": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "calculationNumber": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupVatDto": {
        "type": "object",
        "properties": {
          "groupVatId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "vatPeriod": {
            "$ref": "#/components/schemas/VatPeriod"
          },
          "vatRecordingStatus": {
            "$ref": "#/components/schemas/VatRecordingStatus"
          },
          "turnoverWithFee": {
            "$ref": "#/components/schemas/VatTurnoverDto"
          },
          "turnoverWithoutFee": {
            "$ref": "#/components/schemas/VatTurnoverDto"
          },
          "futureTurnover": {
            "$ref": "#/components/schemas/VatTurnoverDto"
          },
          "vatReductionFromPreviousPeriodAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "vatIncreaseFromPreviousPeriodAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sendDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "calculationNumber": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "vatRecordingVersion": {
            "$ref": "#/components/schemas/VatRecordVersion"
          },
          "createdDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "statusChangeDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "turnoverDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "groupVatVersionHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupVatVersionHistoryDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupVatListDto": {
        "type": "object",
        "properties": {
          "groupVatId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "vatPeriod": {
            "$ref": "#/components/schemas/VatPeriod"
          },
          "vatRecordingStatus": {
            "$ref": "#/components/schemas/VatRecordingStatus"
          },
          "sendDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "vatRecordingVersion": {
            "$ref": "#/components/schemas/VatRecordVersion"
          },
          "calculationNumber": {
            "type": "string",
            "nullable": true
          },
          "createdUtc": {
            "type": "string",
            "format": "date-time"
          },
          "statusChangeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupVatVersionHistoryDto": {
        "type": "object",
        "properties": {
          "calculationNumber": {
            "type": "string",
            "nullable": true
          },
          "vatRecordingStatus": {
            "$ref": "#/components/schemas/VatRecordingStatus"
          },
          "statusChangeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "turnoverDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Header": {
        "type": "object",
        "properties": {
          "clientInvoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "internalInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IndividualVatAddDto": {
        "required": [
          "relatedPartyIdentifier",
          "year"
        ],
        "type": "object",
        "properties": {
          "documentNumber": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "turnoverDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "documentType": {
            "$ref": "#/components/schemas/VatRecordingDocumentType"
          },
          "year": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "turnoverDescription": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "turnoverAmount": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double"
          },
          "vatBaseAmount20": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double"
          },
          "vatBaseAmount10": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double"
          },
          "vatAmount": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double"
          },
          "vatAmount10": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double"
          },
          "vatAmount20": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double"
          },
          "vatDeductionRight": {
            "$ref": "#/components/schemas/VatDeductionRight"
          },
          "relatedDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedVatDocumentAddDto"
            },
            "nullable": true
          },
          "documentDirection": {
            "$ref": "#/components/schemas/DocumentDirection"
          },
          "relatedPartyIdentifier": {
            "minLength": 1,
            "type": "string"
          },
          "foreignDocument": {
            "type": "boolean"
          },
          "turnoverDescription20": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "turnoverDescription10": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "vatPeriod": {
            "$ref": "#/components/schemas/VatPeriod"
          },
          "internalInvoiceOption": {
            "$ref": "#/components/schemas/InternalInvoiceOption"
          },
          "calculationNumber": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "basisForPrepayment": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IndividualVatDto": {
        "type": "object",
        "properties": {
          "individualVatId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "documentNumber": {
            "type": "string",
            "nullable": true
          },
          "vatRecordingStatus": {
            "$ref": "#/components/schemas/VatRecordingStatus"
          },
          "sendDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "turnoverDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "documentType": {
            "$ref": "#/components/schemas/VatRecordingDocumentType"
          },
          "turnoverDescription": {
            "type": "string",
            "nullable": true
          },
          "turnoverAmount": {
            "type": "number",
            "format": "double"
          },
          "vatBaseAmount20": {
            "type": "number",
            "format": "double"
          },
          "vatBaseAmount10": {
            "type": "number",
            "format": "double"
          },
          "vatAmount": {
            "type": "number",
            "format": "double"
          },
          "vatAmount10": {
            "type": "number",
            "format": "double"
          },
          "vatAmount20": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "vatDeductionRight": {
            "$ref": "#/components/schemas/VatDeductionRight"
          },
          "relatedDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedVatDocumentDto"
            },
            "nullable": true
          },
          "basisForPrepayment": {
            "type": "string",
            "nullable": true
          },
          "documentDirection": {
            "$ref": "#/components/schemas/DocumentDirection"
          },
          "relatedPartyIdentifier": {
            "type": "string",
            "nullable": true
          },
          "foreignDocument": {
            "type": "boolean"
          },
          "turnoverDescription20": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "turnoverDescription10": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "vatPeriod": {
            "$ref": "#/components/schemas/VatPeriod"
          },
          "internalInvoiceOption": {
            "$ref": "#/components/schemas/InternalInvoiceOption"
          },
          "calculationNumber": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "vatRecordingVersion": {
            "$ref": "#/components/schemas/VatRecordVersion"
          },
          "createdDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "statusChangeDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "individualVatHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndividualVatVersionHistoryDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IndividualVatListDto": {
        "type": "object",
        "properties": {
          "individualVatId": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "documentNumber": {
            "type": "string",
            "nullable": true
          },
          "vatRecordingStatus": {
            "$ref": "#/components/schemas/VatRecordingStatus"
          },
          "sendDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "documentType": {
            "$ref": "#/components/schemas/VatRecordingDocumentType"
          },
          "turnoverAmount": {
            "type": "number",
            "format": "double"
          },
          "vatAmount": {
            "type": "number",
            "format": "double"
          },
          "vatAmount10": {
            "type": "number",
            "format": "double"
          },
          "vatAmount20": {
            "type": "number",
            "format": "double"
          },
          "vatDeductionRight": {
            "$ref": "#/components/schemas/VatDeductionRight"
          },
          "basisForPrepayment": {
            "type": "string",
            "nullable": true
          },
          "documentDirection": {
            "$ref": "#/components/schemas/DocumentDirection"
          },
          "relatedPartyIdentifier": {
            "type": "string",
            "nullable": true
          },
          "foreignDocument": {
            "type": "boolean"
          },
          "vatRecordingVersion": {
            "$ref": "#/components/schemas/VatRecordVersion"
          },
          "calculationNumber": {
            "type": "string",
            "nullable": true
          },
          "internalInvoiceOption": {
            "$ref": "#/components/schemas/InternalInvoiceOption"
          },
          "vatPeriod": {
            "$ref": "#/components/schemas/VatPeriod"
          },
          "createdUtc": {
            "type": "string",
            "format": "date-time"
          },
          "statusChangeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IndividualVatVersionHistoryDto": {
        "type": "object",
        "properties": {
          "calculationNumber": {
            "type": "string",
            "nullable": true
          },
          "vatRecordingStatus": {
            "$ref": "#/components/schemas/VatRecordingStatus"
          },
          "statusChangeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "turnoverDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InternalInvoiceOption": {
        "enum": [
          "Turnover",
          "Prepayment"
        ],
        "type": "string"
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/Header"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        },
        "additionalProperties": false
      },
      "InvoiceChangeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "oldValue": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/ChangeUser"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "serviceDesk": {
            "type": "boolean"
          },
          "ispName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceDto": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "senderId": {
            "type": "integer",
            "format": "int32"
          },
          "sender": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "accountingDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceSentDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "fineRatePerDay": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "discountPercentage": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "sumWithoutVat": {
            "type": "number",
            "format": "double"
          },
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "vatSum": {
            "type": "number",
            "format": "double"
          },
          "sumWithVat": {
            "type": "number",
            "format": "double"
          },
          "createdUtc": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedUtc": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "modelNumber": {
            "type": "string",
            "nullable": true
          },
          "receiverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "publicPurchaseContractSigner": {
            "$ref": "#/components/schemas/SspCustomerSupplierDto"
          },
          "publicPurchaseContractSignerContractId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contract": {
            "$ref": "#/components/schemas/SspContractDto"
          },
          "status": {
            "$ref": "#/components/schemas/SalesInvoiceStatus"
          },
          "uasSender": {
            "$ref": "#/components/schemas/CompanyDto"
          },
          "totalRowsCount": {
            "type": "integer",
            "format": "int32"
          },
          "channel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "channelAddress": {
            "type": "string",
            "nullable": true
          },
          "serviceProvider": {
            "type": "string",
            "nullable": true
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemDto"
            },
            "nullable": true
          },
          "invoiceMessage": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "acceptRejectMessage": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesInvoiceAttachmentDto"
            },
            "nullable": true
          },
          "bankAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesInvoiceBankAccountDto"
            },
            "nullable": true
          },
          "selectedPrepaymentInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectedIndividualPrepaymentInvoiceDto"
            },
            "nullable": true
          },
          "isCreditInvoice": {
            "type": "boolean"
          },
          "senderReceiverContractNumber": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCodes"
          },
          "totalToPay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sendInvoiceToCir": {
            "type": "boolean",
            "nullable": true
          },
          "cirInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "cirAmountChangeId": {
            "type": "string",
            "nullable": true
          },
          "cirSettledAmount": {
            "type": "number",
            "format": "double"
          },
          "isProFormaInvoice": {
            "type": "boolean",
            "nullable": true
          },
          "cirHistory": {
            "$ref": "#/components/schemas/CirHistoryDto"
          },
          "cirAssignationHistory": {
            "$ref": "#/components/schemas/InvoiceHistoryDto"
          },
          "cirStatus": {
            "$ref": "#/components/schemas/CirInvoiceStatus"
          },
          "isDebitNote": {
            "type": "boolean"
          },
          "stornoNumber": {
            "type": "string",
            "nullable": true
          },
          "cancelInvoiceMessage": {
            "type": "string",
            "nullable": true
          },
          "prepaymentInvoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "isPrepaymentInvoice": {
            "type": "boolean"
          },
          "vatPointDate": {
            "type": "integer",
            "format": "int32"
          },
          "globUniqId": {
            "type": "string",
            "nullable": true
          },
          "vatNumberFactoringCompany": {
            "type": "string",
            "nullable": true
          },
          "factoringContractNumber": {
            "type": "string",
            "nullable": true
          },
          "sourceInvoiceSelectionMode": {
            "$ref": "#/components/schemas/SourceInvoiceSelectionMode"
          },
          "indebtednessPeriodFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "indebtednessPeriodToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLinkDto"
            },
            "nullable": true
          },
          "creditInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLinkDto"
            },
            "nullable": true
          },
          "debitNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLinkDto"
            },
            "nullable": true
          },
          "prepaymentCalculation": {
            "$ref": "#/components/schemas/SalesPrepaymentCalculationDto"
          },
          "prepaymentCalculationDomestic": {
            "$ref": "#/components/schemas/SalesPrepaymentCalculationDto"
          },
          "invoiceTotalPaymentsCalculation": {
            "$ref": "#/components/schemas/SalesInvoiceTotalPaymentsCalculationDto"
          },
          "invoiceTotalPaymentsCalculationDomestic": {
            "$ref": "#/components/schemas/SalesInvoiceTotalPaymentsCalculationDto"
          },
          "lotNumber": {
            "type": "string",
            "nullable": true
          },
          "exemptionReasonsByVatCategory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExemptionReasonByVatCategoryDto"
            },
            "nullable": true
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountDto"
            },
            "nullable": true
          },
          "createdFromXml": {
            "type": "boolean",
            "nullable": true
          },
          "roundingAmount": {
            "type": "number",
            "format": "double"
          },
          "fiscalBillNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "fiscalBillNumbersRepresentation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EFiscalizationFiscalBillNumbersForInvoiceRepresentation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceHistoryDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceChanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceChangeDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceLinkDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string",
            "nullable": true
          },
          "cirInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "sentToCir": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/SalesInvoiceStatus"
          }
        },
        "additionalProperties": false
      },
      "InvoiceTotalVatPaymentsCalculationDomesticDto": {
        "type": "object",
        "properties": {
          "vatPerRateCalculations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceTotalVatPerRateCalculationDomesticDto"
            },
            "nullable": true
          },
          "totalVatPaymentsDomestic": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "InvoiceTotalVatPerRateCalculationDomesticDto": {
        "type": "object",
        "properties": {
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "baseSumForPaymentVatRate": {
            "type": "number",
            "format": "double"
          },
          "vatCategory": {
            "type": "string",
            "nullable": true
          },
          "vatPaymentPerRate": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceTypes": {
        "enum": [
          "Regular",
          "Credit",
          "DebitNote",
          "Prepayment"
        ],
        "type": "string"
      },
      "Languages": {
        "enum": [
          "cs_CZ",
          "de_DE",
          "et_EE",
          "en_US",
          "fi_FI",
          "lt_LT",
          "lv_LV",
          "ru_RU",
          "sk_SK",
          "sr_SC",
          "sr_SL",
          "hu_HU",
          "pl_PL",
          "bg_BG",
          "hr_HR",
          "sl_SI"
        ],
        "type": "string"
      },
      "LineItemDto": {
        "type": "object",
        "properties": {
          "rowId": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "orderNo": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 2000,
            "type": "string",
            "nullable": true
          },
          "unit": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "discountPercentage": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "sumWithoutVat": {
            "type": "number",
            "format": "double"
          },
          "vatRate": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "vatSum": {
            "type": "number",
            "format": "double"
          },
          "sumWithVat": {
            "type": "number",
            "format": "double"
          },
          "vatCategoryCode": {
            "type": "string",
            "nullable": true
          },
          "classificationCode": {
            "type": "string",
            "nullable": true
          },
          "allowances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesLineItemAllowanceDto"
            },
            "nullable": true
          },
          "despatchAdviceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MiniCompanyDto": {
        "type": "object",
        "properties": {
          "bugetCompanyNumber": {
            "type": "string",
            "nullable": true
          },
          "registrationCode": {
            "type": "string",
            "nullable": true
          },
          "vatRegistrationCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "registrationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MiniInvoiceDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseInvoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "salesInvoiceId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PagingOptions": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Payload": {
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          }
        },
        "additionalProperties": false
      },
      "PurchaseFileDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "mainPdf": {
            "type": "boolean"
          },
          "mainXml": {
            "type": "boolean"
          },
          "isFitekInZip": {
            "type": "boolean"
          },
          "isLink": {
            "type": "boolean"
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "extendedPdf": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PurchaseInvoiceCustomFieldDto": {
        "type": "object",
        "properties": {
          "customField": {
            "$ref": "#/components/schemas/CustomFields"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurchaseInvoiceDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "senderApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "senderId": {
            "type": "integer",
            "format": "int32"
          },
          "receiverId": {
            "type": "integer",
            "format": "int32"
          },
          "publicPurchaseContractSignerId": {
            "type": "integer",
            "format": "int32"
          },
          "receiverUserAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PurchaseInvoiceStatus"
          },
          "salesStatus": {
            "$ref": "#/components/schemas/SalesInvoiceStatus"
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "senderReceiverContractNumber": {
            "type": "string",
            "nullable": true
          },
          "accountingDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceSentDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "modelNumber": {
            "type": "string",
            "nullable": true
          },
          "fineRatePerDay": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "currencyName": {
            "type": "string",
            "nullable": true
          },
          "discountPercentage": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "sumWithoutVat": {
            "type": "number",
            "format": "double"
          },
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "vatSum": {
            "type": "number",
            "format": "double"
          },
          "sumWithVat": {
            "type": "number",
            "format": "double"
          },
          "totalPayments": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "invoiceFilePath": {
            "type": "string",
            "nullable": true
          },
          "sender": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "publicPurchaseContractSigner": {
            "type": "string",
            "nullable": true
          },
          "duplicate": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseFileDto"
            },
            "nullable": true
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseInvoiceCustomFieldDto"
            },
            "nullable": true
          },
          "purchaseSelectedPrepaymentInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseSelectedPrepaymentInvoiceDto"
            },
            "nullable": true
          },
          "invoiceMessage": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "acceptRejectMessage": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "cirInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "cirAmountChangeId": {
            "type": "string",
            "nullable": true
          },
          "cirStatus": {
            "$ref": "#/components/schemas/CirInvoiceStatus"
          },
          "cirHistory": {
            "$ref": "#/components/schemas/CirHistoryDto"
          },
          "cirAssignationHistory": {
            "$ref": "#/components/schemas/InvoiceHistoryDto"
          },
          "cirSettledAmount": {
            "type": "number",
            "format": "double"
          },
          "isCreditInvoice": {
            "type": "boolean"
          },
          "isDebitNote": {
            "type": "boolean"
          },
          "cancelInvoiceMessage": {
            "type": "string",
            "nullable": true
          },
          "stornoNumber": {
            "type": "string",
            "nullable": true
          },
          "isPrepaymentInvoice": {
            "type": "boolean"
          },
          "addVatRate": {
            "type": "boolean",
            "nullable": true
          },
          "receiverCalculatedVatRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalToPay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "vatPointDate": {
            "$ref": "#/components/schemas/VatPointDates"
          },
          "vatNumberFactoringCompany": {
            "type": "string",
            "nullable": true
          },
          "factoringContractNumber": {
            "type": "string",
            "nullable": true
          },
          "sourceInvoiceSelectionMode": {
            "$ref": "#/components/schemas/SourceInvoiceSelectionMode"
          },
          "indebtednessPeriodFromDate": {
            "type": "string",
            "format": "date-time"
          },
          "indebtednessPeriodToDate": {
            "type": "string",
            "format": "date-time"
          },
          "reductionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLinkDto"
            },
            "nullable": true
          },
          "sourceInvoicesOutOfEfaktura": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceInvoiceOutOfEFakturaDto"
            },
            "nullable": true
          },
          "invoiceTotalVatPaymentsCalculationDomestic": {
            "$ref": "#/components/schemas/InvoiceTotalVatPaymentsCalculationDomesticDto"
          },
          "isRelatedToInvoicesFromPreviosPeriod": {
            "type": "boolean"
          },
          "creditInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLinkDto"
            },
            "nullable": true
          },
          "debitNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLinkDto"
            },
            "nullable": true
          },
          "ispAcceptedToRepresentCompany": {
            "type": "boolean",
            "nullable": true
          },
          "ispName": {
            "type": "string",
            "nullable": true
          },
          "lotNumber": {
            "type": "string",
            "nullable": true
          },
          "internalRoutingNumber": {
            "type": "string",
            "nullable": true
          },
          "receiverCalculatesVat": {
            "type": "boolean"
          },
          "objectIdentifier": {
            "type": "string",
            "nullable": true
          },
          "createdFromXml": {
            "type": "boolean",
            "nullable": true
          },
          "roundingAmount": {
            "type": "number",
            "format": "double"
          },
          "fiscalBillNumbersRepresentation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EFiscalizationFiscalBillNumbersForInvoiceRepresentation"
            },
            "nullable": true
          },
          "automaticalAcceptance": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurchaseInvoiceOverviewDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "globUniqId": {
            "type": "string",
            "nullable": true
          },
          "documentNumber": {
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "cirInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PurchaseInvoiceStatus"
          },
          "supplierName": {
            "type": "string",
            "nullable": true
          },
          "supplierRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "supplierVatRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "sumWithoutVat": {
            "type": "number",
            "format": "double"
          },
          "vatAmount": {
            "type": "number",
            "format": "double"
          },
          "roundingAmount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "prepaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfReduction": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sentDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PurchaseInvoiceStatus": {
        "enum": [
          "New",
          "Seen",
          "ReNotified",
          "Deleted",
          "Approved",
          "Rejected",
          "Cancelled",
          "Storno",
          "SendingInProgress",
          "Unknown"
        ],
        "type": "string"
      },
      "PurchaseInvoiceStatusChangeDto": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "nullable": true
          },
          "newInvoiceStatus": {
            "$ref": "#/components/schemas/PurchaseInvoiceStatus"
          },
          "purchaseInvoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "cirInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "subscriptionKey": {
            "type": "string",
            "nullable": true
          },
          "stornoNumber": {
            "type": "string",
            "nullable": true
          },
          "cirAssignmentChange": {
            "$ref": "#/components/schemas/CirAssignmentChange"
          },
          "isSigned": {
            "type": "boolean",
            "nullable": true
          },
          "isAutoAssigned": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PurchaseInvoiceStatusFilter": {
        "enum": [
          "New",
          "Seen",
          "ReNotified",
          "Approved",
          "Rejected",
          "Storno"
        ],
        "type": "string"
      },
      "PurchaseInvoicesDto": {
        "type": "object",
        "properties": {
          "purchaseInvoiceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurchaseSelectedPrepaymentInvoiceDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "prepayedAmount": {
            "type": "number",
            "format": "double"
          },
          "prepayedVAT": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceSentDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "contractId": {
            "type": "integer",
            "format": "int32"
          },
          "outOfEfaktura": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ReceiverRecipientsNoticeResponseDto": {
        "type": "object",
        "properties": {
          "noticeNumber": {
            "type": "string",
            "nullable": true
          },
          "noticeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalVatAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "documentIssueOrigin": {
            "$ref": "#/components/schemas/DocumentIssueOrigin"
          },
          "basisOfNotice": {
            "$ref": "#/components/schemas/BasisOfNotice"
          },
          "documentReferenceType": {
            "$ref": "#/components/schemas/DocumentReferenceTypes"
          },
          "relatedDocumentNumber": {
            "type": "string",
            "nullable": true
          },
          "relatedDocumentIssueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "relatedInvoicePeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "relatedInvoicePeriodEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "relatedDocumentStornoDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sender": {
            "$ref": "#/components/schemas/CompanyFullDetailsDto"
          },
          "recipient": {
            "$ref": "#/components/schemas/CompanyFullDetailsDto"
          }
        },
        "additionalProperties": false
      },
      "RelatedVatDocumentAddDto": {
        "type": "object",
        "properties": {
          "documentNumber": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelatedVatDocumentDto": {
        "type": "object",
        "properties": {
          "relatedVatDocumentId": {
            "type": "integer",
            "format": "int32"
          },
          "documentNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RestrictionItem": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/eRestrictionField"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesIndividualPrepaymentCalculationDto": {
        "type": "object",
        "properties": {
          "totalPrepaymentWithoutVat": {
            "type": "number",
            "format": "double"
          },
          "prepaymentPaidVat": {
            "type": "number",
            "format": "double"
          },
          "totalPrepaymentInvoice": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "individualPrepaymentFeeReductionForExemptionReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesIndividualPrepaymentFeeReductionForExemptionReasonDto"
            },
            "nullable": true
          },
          "individualPrepaymentPrepaymentVatPerRateParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesIndividualPrepaymentCalculationVatPerRateParametersDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesIndividualPrepaymentCalculationVatPerRateParametersDto": {
        "type": "object",
        "properties": {
          "prepaymentCalculationVatPerRateParametersId": {
            "type": "integer",
            "format": "int64"
          },
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "prepaymentVatBaseReduction": {
            "type": "number",
            "format": "double"
          },
          "prepaidVatPerRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SalesIndividualPrepaymentFeeReductionForExemptionReasonDto": {
        "type": "object",
        "properties": {
          "vatCategory": {
            "type": "string",
            "nullable": true
          },
          "feeReduction": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SalesInvoiceAttachmentDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          },
          "createdUtc": {
            "type": "string",
            "format": "date-time"
          },
          "isUbl": {
            "type": "boolean"
          },
          "isLink": {
            "type": "boolean"
          },
          "link": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesInvoiceBankAccountDto": {
        "type": "object",
        "properties": {
          "bankAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "salesInvoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "unifiedBankAccount": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesInvoiceStatus": {
        "enum": [
          "New",
          "Draft",
          "Sent",
          "Paid",
          "Mistake",
          "OverDue",
          "Archived",
          "Sending",
          "Deleted",
          "Approved",
          "Rejected",
          "Cancelled",
          "Storno",
          "Unknown"
        ],
        "type": "string"
      },
      "SalesInvoiceStatusChangeDto": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "nullable": true
          },
          "newInvoiceStatus": {
            "$ref": "#/components/schemas/SalesInvoiceStatus"
          },
          "salesInvoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "cirInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "subscriptionKey": {
            "type": "string",
            "nullable": true
          },
          "stornoNumber": {
            "type": "string",
            "nullable": true
          },
          "cirAssignmentChange": {
            "$ref": "#/components/schemas/CirAssignmentChange"
          },
          "isSigned": {
            "type": "boolean",
            "nullable": true
          },
          "isAutoAssigned": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SalesInvoiceTotalPaymentsCalculationDto": {
        "type": "object",
        "properties": {
          "totalPayments": {
            "type": "number",
            "format": "double"
          },
          "paymentFeeForVatCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VatCategoryDetailsDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesInvoicesDto": {
        "type": "object",
        "properties": {
          "salesInvoiceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesLineItemAllowanceDto": {
        "type": "object",
        "properties": {
          "salesLineItemAllowanceId": {
            "type": "integer",
            "format": "int64"
          },
          "salesLineItemId": {
            "type": "integer",
            "format": "int64"
          },
          "baseAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "percentage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "reasonCode": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesPrepaymentCalculationDto": {
        "type": "object",
        "properties": {
          "totalPrepaymentWithoutVat": {
            "type": "number",
            "format": "double"
          },
          "prepaymentPaidVat": {
            "type": "number",
            "format": "double"
          },
          "totalPrepaymentInvoice": {
            "type": "number",
            "format": "double"
          },
          "prepaymentFeeReductionForVatCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VatCategoryDetailsDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchInvoiceResultDto": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalSum": {
            "type": "number",
            "format": "double"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmallInvoiceDto"
            },
            "nullable": true
          },
          "requestId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchParameter": {
        "type": "object",
        "properties": {
          "sortItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortItem"
            },
            "nullable": true
          },
          "pagingOptions": {
            "$ref": "#/components/schemas/PagingOptions"
          },
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestrictionItem"
            },
            "nullable": true
          },
          "localizationType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchPurchaseInvoiceResultDto": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalSum": {
            "type": "number",
            "format": "double"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmallPurchaseInvoiceDto"
            },
            "nullable": true
          },
          "requestId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SelectedIndividualPrepaymentInvoiceDto": {
        "type": "object",
        "properties": {
          "selectedPrepaymentInvoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "prepaymentInvoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "prepaymentInvoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "prepayedAmount": {
            "type": "number",
            "format": "double"
          },
          "prepayedVAT": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceSentDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "individualPrepaymentCalculations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesIndividualPrepaymentCalculationDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendToCir": {
        "enum": [
          "No",
          "Yes"
        ],
        "type": "string"
      },
      "SenderRecipientsNoticeRequest": {
        "type": "object",
        "properties": {
          "noticeNumber": {
            "type": "string",
            "nullable": true
          },
          "totalVatAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "documentIssueOrigin": {
            "$ref": "#/components/schemas/DocumentIssueOrigin"
          },
          "basisOfNotice": {
            "$ref": "#/components/schemas/BasisOfNotice"
          },
          "documentReferenceType": {
            "$ref": "#/components/schemas/DocumentReferenceTypes"
          },
          "relatedDocumentNumber": {
            "type": "string",
            "nullable": true
          },
          "relatedDocumentIssueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "relatedInvoicePeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "relatedInvoicePeriodEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "relatedDocumentStornoDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "recipient": {
            "$ref": "#/components/schemas/CompanyDetailsRequest"
          }
        },
        "additionalProperties": false
      },
      "SenderRecipientsNoticeStatus": {
        "enum": [
          "Draft",
          "Sent",
          "Mistake",
          "Unknown"
        ],
        "type": "string"
      },
      "SerbiaCompanyType": {
        "enum": [
          "Company",
          "SoleProprietor",
          "Association",
          "BancropcyEstate",
          "Foundation",
          "SportsAssociation",
          "Chamber",
          "BudgetUser",
          "Other"
        ],
        "type": "string"
      },
      "SettlementDto": {
        "type": "object",
        "properties": {
          "settlementDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SimplePurchaseInvoiceDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "globUniqId": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "cirStatus": {
            "$ref": "#/components/schemas/CirInvoiceStatus"
          },
          "cirInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedUtc": {
            "type": "string",
            "format": "date-time"
          },
          "cirSettledAmount": {
            "type": "number",
            "format": "double"
          },
          "vatNumberFactoringCompany": {
            "type": "string",
            "nullable": true
          },
          "factoringContractNumber": {
            "type": "string",
            "nullable": true
          },
          "cancelComment": {
            "type": "string",
            "nullable": true
          },
          "stornoComment": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PurchaseInvoiceStatus"
          }
        },
        "additionalProperties": false
      },
      "SimpleSalesInvoiceDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "globUniqId": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "cirStatus": {
            "$ref": "#/components/schemas/CirInvoiceStatus"
          },
          "cirInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedUtc": {
            "type": "string",
            "format": "date-time"
          },
          "cirSettledAmount": {
            "type": "number",
            "format": "double"
          },
          "vatNumberFactoringCompany": {
            "type": "string",
            "nullable": true
          },
          "factoringContractNumber": {
            "type": "string",
            "nullable": true
          },
          "cancelComment": {
            "type": "string",
            "nullable": true
          },
          "stornoComment": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/SalesInvoiceStatus"
          }
        },
        "additionalProperties": false
      },
      "SmallInvoiceDto": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "senderId": {
            "type": "integer",
            "format": "int32"
          },
          "sender": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "accountingDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceSentDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "fineRatePerDay": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "discountPercentage": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "sumWithoutVat": {
            "type": "number",
            "format": "double"
          },
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "vatSum": {
            "type": "number",
            "format": "double"
          },
          "sumWithVat": {
            "type": "number",
            "format": "double"
          },
          "createdUtc": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedUtc": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "modelNumber": {
            "type": "string",
            "nullable": true
          },
          "receiverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "receiverIsDeleted": {
            "type": "boolean"
          },
          "channel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "channelAdress": {
            "type": "string",
            "nullable": true
          },
          "serviceProvider": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCodes"
          },
          "status": {
            "$ref": "#/components/schemas/SalesInvoiceStatus"
          },
          "cirStatus": {
            "$ref": "#/components/schemas/CirInvoiceStatus"
          },
          "cirInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "invoiceType": {
            "$ref": "#/components/schemas/InvoiceTypes"
          },
          "ispAcceptedToRepresentCompany": {
            "type": "boolean"
          },
          "ispName": {
            "type": "string",
            "nullable": true
          },
          "totalToPay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "roundingAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SmallPurchaseInvoiceDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "senderApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "senderId": {
            "type": "integer",
            "format": "int32"
          },
          "receiverId": {
            "type": "integer",
            "format": "int32"
          },
          "receiverUserAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PurchaseInvoiceStatus"
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "accountingDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceSentDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "paymentDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "fineRatePerDay": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "discountPercentage": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "sumWithoutVat": {
            "type": "number",
            "format": "double"
          },
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "vatSum": {
            "type": "number",
            "format": "double"
          },
          "sumWithVat": {
            "type": "number",
            "format": "double"
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "invoiceFilePath": {
            "type": "string",
            "nullable": true
          },
          "sender": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "duplicate": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseInvoiceCustomFieldDto"
            },
            "nullable": true
          },
          "invoiceMessage": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "acceptRejectMessage": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "cirInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "cirStatus": {
            "$ref": "#/components/schemas/CirInvoiceStatus"
          },
          "invoiceType": {
            "$ref": "#/components/schemas/InvoiceTypes"
          },
          "ispAcceptedToRepresentCompany": {
            "type": "boolean"
          },
          "ispName": {
            "type": "string",
            "nullable": true
          },
          "totalToPay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "automaticalAcceptance": {
            "type": "boolean",
            "nullable": true
          },
          "roundingAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SortDirection": {
        "enum": [
          "Asc",
          "Desc"
        ],
        "type": "string"
      },
      "SortItem": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "$ref": "#/components/schemas/eSortColumn"
          },
          "sortDirection": {
            "$ref": "#/components/schemas/SortDirection"
          }
        },
        "additionalProperties": false
      },
      "SourceInvoiceOutOfEFakturaDto": {
        "type": "object",
        "properties": {
          "sourceInvoiceOutOfEFakturaId": {
            "type": "integer",
            "format": "int64"
          },
          "sourceInvoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "invoiceGlobUniqId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SourceInvoiceSelectionMode": {
        "enum": [
          "InvoiceSelection",
          "PeriodSelection",
          "PrepaymentSelection"
        ],
        "type": "string"
      },
      "SspAddressDto": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "integer",
            "format": "int32"
          },
          "streetAndHouse": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postalIndex": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SspBankAccountDto": {
        "type": "object",
        "properties": {
          "bankAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "bankId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "iban": {
            "type": "string",
            "nullable": true
          },
          "swift": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "unifiedBankAccount": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SspContractDto": {
        "required": [
          "customerSupplier"
        ],
        "type": "object",
        "properties": {
          "contractId": {
            "type": "integer",
            "format": "int32"
          },
          "customerSupplier": {
            "$ref": "#/components/schemas/SspCustomerSupplierDto"
          },
          "customerSupplierId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentTerms": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fineRatePerDay": {
            "maximum": 9999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "serviceId": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "referenceNr": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "contactPersonName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contactPersonMail": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "contractDesc": {
            "type": "string",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SspAddressDto"
            },
            "nullable": true
          },
          "companyAddress": {
            "$ref": "#/components/schemas/SspAddressDto"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractCustomFieldDto"
            },
            "nullable": true
          },
          "channels": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "ownerCompanyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "channel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "channelAddress": {
            "type": "string",
            "nullable": true
          },
          "serviceProvider": {
            "type": "string",
            "nullable": true
          },
          "contractNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceNotificationEmail": {
            "type": "string",
            "nullable": true
          },
          "invoiceCurrency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isBudgetClient": {
            "type": "boolean"
          },
          "sendInvoiceToCir": {
            "type": "boolean"
          },
          "availableContracts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "contractApplication": {
            "$ref": "#/components/schemas/ContractApplicationDto"
          },
          "isReceiverCompanyDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SspCustomerSupplierDto": {
        "type": "object",
        "properties": {
          "customerSupplierId": {
            "type": "integer",
            "format": "int32"
          },
          "ownerCompanyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyName": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "registrationCode": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "vatRegistrationCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "personalId": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isCompany": {
            "type": "boolean",
            "nullable": true
          },
          "companyMail": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "email": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "language": {
            "$ref": "#/components/schemas/Languages"
          },
          "additionalCode": {
            "type": "string",
            "nullable": true
          },
          "serbiaCompanyType": {
            "$ref": "#/components/schemas/SerbiaCompanyType"
          },
          "specialTreatment": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SspEmailDto": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "isActivated": {
            "type": "boolean"
          },
          "activationToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SspModules": {
        "enum": [
          "root",
          "dashboard",
          "salesInvoices",
          "salesInvoiceNew",
          "salesInvoiceEdit",
          "salesInvoicePreview",
          "salesInvoiceView",
          "purchases",
          "purchaseInvoiceEdit",
          "purchaseInvoicePublic",
          "settings",
          "login",
          "myDetails",
          "usersList",
          "userEdit",
          "registers",
          "billing",
          "companyDetails",
          "contactsList",
          "invoiceSettings",
          "productsList",
          "productEdit",
          "searchResults",
          "conversation",
          "files",
          "filesAdd",
          "filesEdit",
          "salesInvoiceUpload",
          "companyList",
          "tunnelPage",
          "packages",
          "contactsEdit",
          "apiManagement",
          "salesAttachmentUpload",
          "invoiceMessages",
          "addCompany",
          "contractApplications",
          "contractApplicationsUpdate",
          "salesInvoiceCopy",
          "companyNameFromRegister",
          "salesInvoiceCirEdit",
          "purchaseInvoiceCirEdit",
          "changePackage",
          "oneClickOrder",
          "companyLogo",
          "cirTickets",
          "cirTicketDetails",
          "cirTicketNew",
          "groupVat",
          "groupVatEdit",
          "singleVat",
          "singleVatEdit",
          "ispSettings",
          "publicPurchaseContractorInvoices",
          "ispConfiguration",
          "publicPurchaseContractorInvoiceView",
          "fiscalization",
          "incomingFiscalInvoices",
          "outgoingFiscalInvoices",
          "incomingFiscalInvoicesView",
          "outgoingFiscalInvoicesView",
          "releaseNotes",
          "crossBorderDocuments",
          "importCustomsDeclarations",
          "importCustomsDeclarationsView",
          "recordsOfExportInvoices",
          "recordsOfExportInvoicesView",
          "recordsOfExportInvoicesEdit",
          "singleVatV2",
          "singleVatViewV2",
          "groupVatV2",
          "groupVatViewV2",
          "vatRecordsUploadV2",
          "dispatchNote",
          "dispatchNoteView",
          "recipientsNoticeOnInputVat",
          "sentNoticesOnInputVat",
          "receivedNoticesOnInputVat",
          "sentNoticesOnInputVatView",
          "receivedNoticesOnInputVatView",
          "sentNoticesOnInputVatCreate"
        ],
        "type": "string"
      },
      "Status": {
        "type": "object",
        "properties": {
          "previousInvoiceStatus": {
            "type": "string",
            "nullable": true
          },
          "newInvoiceStatus": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusChangeRequest": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "integratorId": {
            "type": "string",
            "nullable": true
          },
          "authorizationToken": {
            "type": "string",
            "nullable": true
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payload"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StornoInvoiceMessageDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "stornoNumber": {
            "type": "string",
            "nullable": true
          },
          "stornoComment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionType": {
        "enum": [
          "Sale",
          "Refund"
        ],
        "type": "string"
      },
      "ValueAddedTaxExemptionReasonDto": {
        "type": "object",
        "properties": {
          "reasonId": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "law": {
            "type": "string",
            "nullable": true
          },
          "article": {
            "type": "string",
            "nullable": true
          },
          "paragraph": {
            "type": "string",
            "nullable": true
          },
          "point": {
            "type": "string",
            "nullable": true
          },
          "subpoint": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "freeFormNote": {
            "type": "string",
            "nullable": true
          },
          "activeFrom": {
            "type": "string",
            "format": "date-time"
          },
          "activeTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VatCategoryDetailsDto": {
        "type": "object",
        "properties": {
          "vatCategory": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "format": "double"
          },
          "vatRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "VatDeductionRight": {
        "enum": [
          "None",
          "Partially",
          "Fully"
        ],
        "type": "string"
      },
      "VatPeriod": {
        "enum": [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
          "FirstQuarter",
          "SecondQuarter",
          "ThirdQuarter",
          "FourthQuarter"
        ],
        "type": "string"
      },
      "VatPointDates": {
        "enum": [
          "None",
          "IssuingDate",
          "DeliveryDate",
          "PaymentDate"
        ],
        "type": "string"
      },
      "VatRecordVersion": {
        "enum": [
          "First",
          "Second",
          "Third"
        ],
        "type": "string"
      },
      "VatRecordingDocumentType": {
        "enum": [
          "Invoice",
          "CreditNote",
          "DebitNote",
          "PrepaymentInvoice",
          "InternalAccountForTurnoverOfForeigner",
          "OtherInternalStatement"
        ],
        "type": "string"
      },
      "VatRecordingStatus": {
        "enum": [
          "Draft",
          "Recorded",
          "Replaced",
          "Cancelled"
        ],
        "type": "string"
      },
      "VatReverseChargeDto": {
        "type": "object",
        "properties": {
          "purchaseInvoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "vatAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "VatTurnoverAddDto": {
        "type": "object",
        "properties": {
          "taxableAmount20": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double"
          },
          "taxAmount20": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double"
          },
          "totalAmount20": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double"
          },
          "taxableAmount10": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double"
          },
          "taxAmount10": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double"
          },
          "totalAmount10": {
            "maximum": 99999999999999.99,
            "minimum": 0,
            "pattern": "^-?\\d+(\\.\\d{1,2})?$",
            "type": "number",
            "format": "double"
          },
          "turnoverDescription10": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "turnoverDescription20": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VatTurnoverDto": {
        "type": "object",
        "properties": {
          "vatTurnoverId": {
            "type": "integer",
            "format": "int32"
          },
          "taxableAmount20": {
            "type": "number",
            "format": "double"
          },
          "taxAmount20": {
            "type": "number",
            "format": "double"
          },
          "totalAmount20": {
            "type": "number",
            "format": "double"
          },
          "taxableAmount10": {
            "type": "number",
            "format": "double"
          },
          "taxAmount10": {
            "type": "number",
            "format": "double"
          },
          "totalAmount10": {
            "type": "number",
            "format": "double"
          },
          "turnoverDescription10": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "turnoverDescription20": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "eRestrictionField": {
        "enum": [
          "General",
          "Invoice_Sender_Like",
          "Invoice_Receiver_Like",
          "Invoice_InvoiceNumber_Like",
          "Invoice_InvoiceNumber_Equals",
          "Invoice_AccountingDateUtc_Before",
          "Invoice_AccountingDateUtc_After",
          "Invoice_InvoiceSentDateUtc_Before",
          "Invoice_InvoiceSentDateUtc_After",
          "Invoice_PaymentDateUtc_Before",
          "Invoice_PaymentDateUtc_After",
          "Invoice_ReferenceNumber_Like",
          "Invoice_Description_Like",
          "Invoice_Note_Like",
          "Invoice_OrderNumber_Like",
          "Row_Code_Like",
          "Row_Description_Like",
          "Row_Unit_Like",
          "Invoice_Status",
          "Invoice_ServiceId",
          "Invoice_Channel",
          "Invoice_ChannelAdress",
          "Invoice_InvoiceType",
          "Invoice_SentToCir",
          "Invoice_IsFiscalInvoice",
          "VatRecording_Status",
          "VatRecording_DocumentNumber_CalculationNumber",
          "VatRecording_DocumentType",
          "VatRecording_StatusChangeDate_Before",
          "VatRecording_StatusChangeDate_After",
          "VatRecording_CalculationNumber",
          "Invoice_ContractCompanyId",
          "Invoice_SenderCompanyId",
          "Invoice_PublicPurchaseContractSignerContractCompanyId",
          "FiscalBill_SdcTimestamp_After",
          "FiscalBill_SdcTimestamp_Before",
          "FiscalBill_SellerId",
          "FiscalBill_BuyerId",
          "FiscalBill_TransactionType",
          "FiscalBill_BelongToInvoice",
          "FiscalBill_InvoiceNumber",
          "RecipientNotice_NoticeDate_Before",
          "RecipientNotice_NoticeDate_After",
          "RecipientNotice_NoticeNumber",
          "RecipientNotice_RecipientId",
          "RecipientNotice_SenderId",
          "RecipientNotice_SendingStatus",
          "VatRecord_Status",
          "VatRecord_DocumentNumber_CalculationNumber",
          "VatRecord_DocumentType",
          "VatRecord_StatusChangeDate_Before",
          "VatRecord_StatusChangeDate_After",
          "VatRecord_CalculationNumber"
        ],
        "type": "string"
      },
      "eSortColumn": {
        "enum": [
          "Invoice_InvoiceId",
          "Invoice_SenderName",
          "Invoice_ReceiverName",
          "Invoice_AccountingDateUtc",
          "Invoice_InvoiceDateUtc",
          "Invoice_PaymentDateUtc",
          "Invoice_SumWithoutVat",
          "Invoice_VatRate",
          "Invoice_VatSum",
          "Invoice_SumWithVat",
          "Invoice_ReferenceNumber",
          "Invoice_Description",
          "Invoice_OrderNumber",
          "Invoice_InvoiceNumber",
          "Invoice_Status",
          "Invoice_ServiceId",
          "Invoice_ChannelId",
          "Invoice_ChannelAdress",
          "Invoice_DocumentType",
          "Invoice_InvoiceSentDateUtc",
          "Invoice_InvoiceType",
          "Invoice_LastModifiedUtc",
          "VatRecord_CalculationNumber",
          "VatRecord_VatPeriod",
          "VatRecord_DocumentNumber",
          "VatRecord_StatusChangeDate",
          "VatRecord_DocumentType",
          "RecipientNotice_NoticeNumber",
          "RecipientNotice_NoticeDate"
        ],
        "type": "string"
      }
    }
  }
}